<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,test.zhishinet.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(port,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">${__P(username,sh000124)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">${__P(password,welcome3)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${__V(${type} ${token})}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="num" elementType="Argument">
            <stringProp name="Argument.name">num</stringProp>
            <stringProp name="Argument.value">${__Random(1111,9999,num)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <TestFragmentController guiclass="TestFragmentControllerGui" testclass="TestFragmentController" testname="getToken" enabled="true"/>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${password}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="单句选词填空" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522830240000</longProp>
        <longProp name="ThreadGroup.end_time">1522830240000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="getToken" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="1966366787">getToken</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="配置body Data" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var host = &quot;${host}&quot;;
if (host == &quot;test.zhishinet.com&quot;){ 
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;:null,&quot;textbookSeriesId&quot;:23,&quot;textbookId&quot;:74,&quot;assessmentBuilderType&quot;:2,&quot;title&quot;:&quot;单句选词适当形式填空${num}&quot;,&quot;beginDate&quot;:&quot;2018-04-10&quot;,&quot;endDate&quot;:&quot;2100-04-13&quot;,&quot;isOptionRandom&quot;:true,&quot;isQuestionFeedback&quot;:true,&quot;showSubTitle&quot;:false,&quot;isTimerOn&quot;:true,&quot;isPublish&quot;:true,&quot;duration&quot;:4,&quot;subjectId&quot;:1,&quot;assessmentBuilderUnitList&quot;:[{&quot;unitNo&quot;:1,&quot;unitName&quot;:&quot;第一单元&quot;}],&quot;assessmentBuilderClassificationList&quot;:[{&quot;assessmentClassification&quot;:1,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:2,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:3,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:6,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:7,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:8,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:9,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:10,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:11,&quot;assessmentQuestionCount&quot;:2}],&quot;assessmentBuilderSessionList&quot;:[{&quot;sessionId&quot;:2624,&quot;globalSessionTitle&quot;:&quot;2015级QAclass&quot;,&quot;checkFlag&quot;:false,&quot;code&quot;:&quot;10002197&quot;,&quot;title&quot;:&quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&quot;appTitle&quot;:&quot;芝士网皇家学院&quot;,&quot;isAllow&quot;:0,&quot;classType&quot;:&quot;Express&quot;,&quot;classTypeTitle&quot;:&quot;体验班&quot;,&quot;sessItemId&quot;:0,&quot;isRequire&quot;:true,&quot;isRequiredEmend&quot;:false,&quot;isChecked&quot;:true,&quot;selectAsk&quot;:[{&quot;sessionId&quot;:2624,&quot;isRequire&quot;:true},{&quot;sessionId&quot;:2624,&quot;isRequiredEmend&quot;:true,&quot;emendTypeCode&quot;:&quot;ERROR_INTENSIFY_QUESTIONS&quot;}],&quot;emendTypeCode&quot;:&quot;NO_NEED&quot;}],&quot;assessmentBuilderQuestionList&quot;:[{&quot;assessmentArticleId&quot;:2982,&quot;assessmentQuestionId&quot;:341248,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2982,&quot;assessmentQuestionId&quot;:341249,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2982,&quot;assessmentQuestionId&quot;:341250,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2982,&quot;assessmentQuestionId&quot;:341251,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2982,&quot;assessmentQuestionId&quot;:341252,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2984,&quot;assessmentQuestionId&quot;:341253,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2984,&quot;assessmentQuestionId&quot;:341254,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2984,&quot;assessmentQuestionId&quot;:341255,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2984,&quot;assessmentQuestionId&quot;:341256,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2984,&quot;assessmentQuestionId&quot;:341257,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1}]}&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341248, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341249, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341250, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341251, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341252, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341253, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341254, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341255, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341256, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341257, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}
else if (host == &quot;dev.zhishinet.com&quot;){
vars.put(&quot;body&quot;, &apos;{&quot;textbookSeriesId&quot;: 2, &quot;textbookId&quot;: 10, &quot;assessmentBuilderType&quot;: 2, &quot;title&quot;: &quot;Starter Unit 2词汇语法单句选词${num}&quot;, &quot;beginDate&quot;: &quot;2018-04-10&quot;, &quot;endDate&quot;: &quot;2100-04-13&quot;, &quot;isOptionRandom&quot;: true, &quot;isQuestionFeedback&quot;: true, &quot;showSubTitle&quot;: false, &quot;isTimerOn&quot;: true, &quot;isPublish&quot;: true, &quot;duration&quot;: 30, &quot;subjectId&quot;: 1, &quot;assessmentBuilderUnitList&quot;: [{&quot;unitName&quot;: &quot;Starter Unit 2&quot;, &quot;unitNo&quot;: 2, &quot;unitId&quot;: 190 }], &quot;assessmentBuilderClassificationList&quot;: [{&quot;assessmentClassification&quot;: 1, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 2, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 3, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 6, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 7, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 8, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 9, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 10, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 11, &quot;assessmentQuestionCount&quot;: 3 }], &quot;assessmentBuilderSessionList&quot;: [{&quot;sessionId&quot;: 2624, &quot;globalSessionTitle&quot;: &quot;2015级QAclass&quot;, &quot;checkFlag&quot;: false, &quot;sessItemId&quot;: 2, &quot;isRequire&quot;: true, &quot;isRequiredEmend&quot;: false, &quot;isChecked&quot;: true, &quot;selectAsk&quot;: [{&quot;sessionId&quot;: 2624, &quot;isRequire&quot;: true }, {&quot;sessionId&quot;: 2624, &quot;isRequiredEmend&quot;: true, &quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;}], &quot;emendTypeCode&quot;: &quot;NO_NEED&quot;}], &quot;suitRelAssessmentBuilderList&quot;: [{&quot;suitId&quot;: 16454 }], &quot;assessmentBuilderQuestionList&quot;: [{&quot;assessmentArticleId&quot;: 2796, &quot;assessmentQuestionId&quot;: 337166, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2796, &quot;assessmentQuestionId&quot;: 337167, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2796, &quot;assessmentQuestionId&quot;: 337168, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2796, &quot;assessmentQuestionId&quot;: 337169, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2796, &quot;assessmentQuestionId&quot;: 337170, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2797, &quot;assessmentQuestionId&quot;: 337171, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2797, &quot;assessmentQuestionId&quot;: 337172, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2797, &quot;assessmentQuestionId&quot;: 337173, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2797, &quot;assessmentQuestionId&quot;: 337174, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2797, &quot;assessmentQuestionId&quot;: 337175, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2798, &quot;assessmentQuestionId&quot;: 337176, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2798, &quot;assessmentQuestionId&quot;: 337177, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2798, &quot;assessmentQuestionId&quot;: 337178, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2798, &quot;assessmentQuestionId&quot;: 337179, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2798, &quot;assessmentQuestionId&quot;: 337180, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }] }&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337191, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337192, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337193, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337194, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337195, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337196, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337197, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337198, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337199, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337200, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false },  {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 23, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337181, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 24, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337182, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 25, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337183, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 26, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337184, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 27, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337185, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 28, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337186, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 29, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337187, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 30, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337188, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 31, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337189, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 32, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337190, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;);}
else if(host == &quot;staging.zhishinet.com&quot;){
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;:null,&quot;textbookSeriesId&quot;:1,&quot;textbookId&quot;:1,&quot;assessmentBuilderType&quot;:2,&quot;title&quot;:&quot;单句选词666666&quot;,&quot;beginDate&quot;:&quot;2018-04-12&quot;,&quot;endDate&quot;:&quot;2100-04-12&quot;,&quot;isOptionRandom&quot;:true,&quot;isQuestionFeedback&quot;:true,&quot;showSubTitle&quot;:false,&quot;isTimerOn&quot;:true,&quot;isPublish&quot;:true,&quot;duration&quot;:30,&quot;subjectId&quot;:1,&quot;assessmentBuilderUnitList&quot;:[{&quot;unitNo&quot;:1,&quot;unitName&quot;:&quot;Unit 1&quot;}],&quot;assessmentBuilderClassificationList&quot;:[{&quot;assessmentClassification&quot;:1,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:2,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:3,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:6,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:7,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:8,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:9,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:10,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:11,&quot;assessmentQuestionCount&quot;:3}],&quot;assessmentBuilderSessionList&quot;:[{&quot;sessionId&quot;:2624,&quot;globalSessionTitle&quot;:&quot;2015级QAclass&quot;,&quot;checkFlag&quot;:false,&quot;code&quot;:&quot;10002197&quot;,&quot;title&quot;:&quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&quot;appTitle&quot;:&quot;芝士网皇家学院&quot;,&quot;isAllow&quot;:1,&quot;classType&quot;:&quot;Express&quot;,&quot;classTypeTitle&quot;:&quot;体验班&quot;,&quot;sessItemId&quot;:0,&quot;isRequire&quot;:true,&quot;isRequiredEmend&quot;:false,&quot;isChecked&quot;:true,&quot;selectAsk&quot;:[{&quot;sessionId&quot;:2624,&quot;isRequire&quot;:true},{&quot;sessionId&quot;:2624,&quot;isRequiredEmend&quot;:true,&quot;emendTypeCode&quot;:&quot;ERROR_INTENSIFY_QUESTIONS&quot;}],&quot;emendTypeCode&quot;:&quot;NO_NEED&quot;}],&quot;assessmentBuilderQuestionList&quot;:[{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346327,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346328,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346329,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346330,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346331,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346332,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346333,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346334,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346335,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346336,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346337,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346338,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346339,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346340,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346341,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1}],&quot;suitRelAssessmentBuilderList&quot;:[{&quot;suitId&quot;:27223}]}&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346327, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346328, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346329, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346330, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346331, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346332, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346333, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346334, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346335, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346336, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false },  {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 23, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346337, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 24, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346338, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 25, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346339, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 26, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346340, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 27, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346341, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] },], &quot;FeedbackViewed&quot;: false }] }]&apos;)}</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setHomeworkSuitSeries-创建套题册" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesName&quot;: &quot;${suitSeriesName}&quot;,&#xd;
	&quot;homeworkTextbookId&quot;: 10,&#xd;
	&quot;description&quot;: &quot;自动化测试&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/setHomeworkSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1918375055">suitSeriesName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-631732468">
                <stringProp name="-1336048606">单句选词${num}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取suitSeriesId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitSeriesId</stringProp>
            <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addHomeworkSuitSeriesSessions-套题册关联班级" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesId&quot;: ${suitSeriesId},&#xd;
	&quot;suitSeriesSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: &quot;2624&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/addHomeworkSuitSeriesSessions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="article-关联题库文章" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/article?page=1&amp;pageSize=10&amp;type=Vocabulary</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取articleId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">articleId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;articleId&quot;:(\d+),&quot;title&quot;:&quot;单句选词适当形式填空([a-zA-Z0-9-]+)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">articleId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[?(@.articleQuestionTypes[0].type==22)].articleId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkSuit-套题保存（关联题库和关联套题册）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;articles&quot;: [{&#xd;
		&quot;articleId&quot;: 2988,&#xd;
		&quot;questionType&quot;: 22,&#xd;
		&quot;questionCount&quot;: 4&#xd;
	}],&#xd;
	&quot;homeworkSuit&quot;: {&#xd;
		&quot;suitId&quot;: null,&#xd;
		&quot;suitName&quot;: &quot;单句选词适当形式填空${num}&quot;,&#xd;
		&quot;displayOrder&quot;: &quot;&quot;,&#xd;
		&quot;startDate&quot;: null,&#xd;
		&quot;endDate&quot;: null,&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;,&#xd;
		&quot;suitType&quot;: &quot;VOCABULARY_PRACTICE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;objectVersionNumber&quot;: 1,&#xd;
		&quot;homeworkTextbookSeriesId&quot;: 2,&#xd;
		&quot;homeworkTextbookId&quot;: 10,&#xd;
		&quot;homeworkSuitUnitList&quot;: [{&#xd;
			&quot;homeworkUnitId&quot;: 1&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 2&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 3&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 4&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 5&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 6&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 7&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 8&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 9&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 10&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 11&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 678&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 672&#xd;
		}],&#xd;
		&quot;homeworkSuitRelSeriesList&quot;: [{&#xd;
			&quot;suitSeriesId&quot;: ${suitSeriesId}&#xd;
		}],&#xd;
		&quot;tagLines&quot;: [],&#xd;
		&quot;suitDistrictsList&quot;: [{&#xd;
			&quot;provinceId&quot;: &quot;&quot;,&#xd;
			&quot;cityId&quot;: &quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
	&quot;pools&quot;: [],&#xd;
	&quot;oralParagraphs&quot;: []&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/homeworkSuit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">精选练习</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取suitId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">suitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.suitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="combine-套题发布" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;: [${suitId}],&#xd;
	&quot;status&quot;: &quot;RELEASE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/suit/combine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-单句选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;单句选词作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1528686300,&#xd;
	&quot;endDate&quot;: 4116671940,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;disableFeedback&quot;: false,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;duration&quot;: 2,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: 2624,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2015级QAclass&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10002197&quot;,&#xd;
		&quot;title&quot;: &quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&#xd;
		&quot;appTitle&quot;: &quot;芝士网皇家学院&quot;,&#xd;
		&quot;isAllow&quot;: 0,&#xd;
		&quot;classType&quot;: &quot;Express&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;体验班&quot;,&#xd;
		&quot;isGroupEnable&quot;: 1,&#xd;
		&quot;sessItemId&quot;: 1,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: false,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;emendTypeCode&quot;: &quot;NO_NEED&quot;,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;combineQuestions&quot;: {&#xd;
		&quot;vocabularyQuestionsList&quot;: [],&#xd;
		&quot;vocabularyQuestionsFIDList&quot;: [],&#xd;
		&quot;vocabularyArticleQuestionsList&quot;: [{&#xd;
			&quot;duration&quot;: 120,&#xd;
			&quot;articleId&quot;: ${articleId},&#xd;
			&quot;articleText&quot;: &quot;* I&apos;ll [B1_explanation] it to you in person because it&apos;s too hard to do it over the phone.&amp;nbsp;&lt;br /&gt;\r\n&lt;br /&gt;\r\n* Linda enjoyed [B2_she] very much at the party last night.&amp;nbsp;&lt;br /&gt;\r\n&lt;br /&gt;\r\n* This is the [B3_introduce] I give when I meet new people.&amp;nbsp;&lt;br /&gt;\r\n&lt;br /&gt;\r\n* Can you give me a [B4_suggest] about which color to paint the wall?&amp;nbsp;&lt;br /&gt;\r\n&lt;br /&gt;\r\n* Last weekend, we went to the zoo and saw lots of animals [B5_include] pandas and tigers.&amp;nbsp;&quot;,&#xd;
			&quot;articleTitle&quot;: &quot;选词适当形式填空-单句-04231&quot;,&#xd;
			&quot;comprehensionUnitId&quot;: null,&#xd;
			&quot;comprehensionUnitText&quot;: null,&#xd;
			&quot;articleType&quot;: 22,&#xd;
			&quot;questionCount&quot;: 5,&#xd;
			&quot;difficultyId&quot;: 1,&#xd;
			&quot;assessmentBuilderArticleQuestions&quot;: {&#xd;
				&quot;articleType&quot;: 22,&#xd;
				&quot;assessmentQuestions&quot;: [{&#xd;
					&quot;questionId&quot;: 341248,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3518,&#xd;
					&quot;subCategoryId&quot;: 11683,&#xd;
					&quot;masteryId&quot;: 11684,&#xd;
					&quot;subMasteryId&quot;: 11685,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818515,&#xd;
						&quot;optionText&quot;: &quot;explain&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37275,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 76,&#xd;
					&quot;correctFeedback&quot;: &quot;选词适当形式填空句子1&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;单句选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;选词适当形式填空句子1&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;explanation&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341249,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3518,&#xd;
					&quot;subCategoryId&quot;: 11683,&#xd;
					&quot;masteryId&quot;: 11684,&#xd;
					&quot;subMasteryId&quot;: 11686,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818516,&#xd;
						&quot;optionText&quot;: &quot;herself&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37276,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 76,&#xd;
					&quot;correctFeedback&quot;: &quot;选词适当形式填空句子2&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;单句选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;选词适当形式填空句子2&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;she&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341250,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3518,&#xd;
					&quot;subCategoryId&quot;: 11683,&#xd;
					&quot;masteryId&quot;: 11684,&#xd;
					&quot;subMasteryId&quot;: 11687,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818517,&#xd;
						&quot;optionText&quot;: &quot;introduction&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37277,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 76,&#xd;
					&quot;correctFeedback&quot;: &quot;选词适当形式填空句子3&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;单句选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;选词适当形式填空句子3&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;introduce&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341251,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3518,&#xd;
					&quot;subCategoryId&quot;: 11683,&#xd;
					&quot;masteryId&quot;: 11684,&#xd;
					&quot;subMasteryId&quot;: 11688,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818518,&#xd;
						&quot;optionText&quot;: &quot;suggestion&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37278,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 76,&#xd;
					&quot;correctFeedback&quot;: &quot;选词适当形式填空句子4&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;单句选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;选词适当形式填空句子4&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;suggest&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341252,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3518,&#xd;
					&quot;subCategoryId&quot;: 11683,&#xd;
					&quot;masteryId&quot;: 11684,&#xd;
					&quot;subMasteryId&quot;: 11689,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818519,&#xd;
						&quot;optionText&quot;: &quot;including&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37279,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 76,&#xd;
					&quot;correctFeedback&quot;: &quot;选词适当形式填空句子5&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;单句选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;选词适当形式填空句子5&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;include&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}]&#xd;
			},&#xd;
			&quot;assessmentArticleBlanks&quot;: [{&#xd;
				&quot;blankId&quot;: 37275,&#xd;
				&quot;blankText&quot;: &quot;explanation&quot;,&#xd;
				&quot;sequence&quot;: &quot;B1&quot;,&#xd;
				&quot;order&quot;: 1,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 0,&#xd;
				&quot;blankText&quot;: &quot;contact&quot;,&#xd;
				&quot;sequence&quot;: &quot;&quot;,&#xd;
				&quot;order&quot;: 2,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37278,&#xd;
				&quot;blankText&quot;: &quot;suggest&quot;,&#xd;
				&quot;sequence&quot;: &quot;B4&quot;,&#xd;
				&quot;order&quot;: 3,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37279,&#xd;
				&quot;blankText&quot;: &quot;include&quot;,&#xd;
				&quot;sequence&quot;: &quot;B5&quot;,&#xd;
				&quot;order&quot;: 4,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37276,&#xd;
				&quot;blankText&quot;: &quot;she&quot;,&#xd;
				&quot;sequence&quot;: &quot;B2&quot;,&#xd;
				&quot;order&quot;: 5,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37277,&#xd;
				&quot;blankText&quot;: &quot;introduce&quot;,&#xd;
				&quot;sequence&quot;: &quot;B3&quot;,&#xd;
				&quot;order&quot;: 6,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}],&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02004100132&quot;,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true&#xd;
		}],&#xd;
		&quot;readingList&quot;: [],&#xd;
		&quot;videoQuestions&quot;: [],&#xd;
		&quot;oralReadSentenceList&quot;: [],&#xd;
		&quot;oralGuessWordList&quot;: [],&#xd;
		&quot;oralReadWordList&quot;: [],&#xd;
		&quot;oralTopicDescribeList&quot;: []&#xd;
	},&#xd;
	&quot;suitList&quot;: [{&#xd;
		&quot;suitId&quot;: ${suitId},&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-单句选词填空" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${body}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkInfo--单句选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="script">prev.setDataEncoding(&quot;UTF-8&quot;);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew(获取sessionUserTrackingId)--单句选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:53474,&quot;sessionUserTrackingId&quot;:(\d+),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework--单句选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId_g1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
              <elementProp name="randomNum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0.4781015824927144</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">randomNum</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--短文选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 53474,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341248,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 2,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341249,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 3,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341250,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 4,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341251,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 4,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341252,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">dev</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--单句选词填空" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 5866,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;:${Questions},&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework--单句选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;assessmentId&quot;: &quot;${assessmentId}&quot;,&#xd;
    &quot;sessionId&quot;: 2624&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="短文选词填空" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522830240000</longProp>
        <longProp name="ThreadGroup.end_time">1522830240000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="getToken" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="1966366787">getToken</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="配置suitId" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var host = &quot;${host}&quot;;
if (host == &quot;test.zhishinet.com&quot;){ 
vars.put(&quot;suitId&quot;, 18186);}
else if (host == &quot;dev.zhishinet.com&quot;){
vars.put(&quot;suitId&quot;, 16452);}
else if(host == &quot;staging.zhishinet.com&quot;){
vars.put(&quot;suitId&quot;, 19433);}</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="配置body Data" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var host = &quot;${host}&quot;;
if (host == &quot;test.zhishinet.com&quot;){ 
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;: null, &quot;textbookSeriesId&quot;: 23, &quot;textbookId&quot;: 74, &quot;assessmentBuilderType&quot;: 2, &quot;title&quot;: &quot;短文选词填空${num}}&quot;, &quot;beginDate&quot;: &quot;2018-04-10&quot;, &quot;endDate&quot;:&quot;2100-04-13&quot;, &quot;isOptionRandom&quot;: true, &quot;isQuestionFeedback&quot;: true, &quot;showSubTitle&quot;: false, &quot;isTimerOn&quot;: true, &quot;isPublish&quot;: true, &quot;duration&quot;: 4, &quot;subjectId&quot;: 1, &quot;assessmentBuilderUnitList&quot;: [{&quot;unitNo&quot;: 2, &quot;unitName&quot;: &quot;第三单元&quot;}], &quot;assessmentBuilderClassificationList&quot;: [{&quot;assessmentClassification&quot;: 1, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 2, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 3, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 6, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 7, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 8, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 9, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 10, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 11, &quot;assessmentQuestionCount&quot;: 2 }], &quot;assessmentBuilderSessionList&quot;: [{&quot;sessionId&quot;: 2624, &quot;globalSessionTitle&quot;: &quot;2015级QAclass&quot;, &quot;checkFlag&quot;: false, &quot;code&quot;: &quot;10002197&quot;, &quot;title&quot;: &quot;芝士网皇家学院 本部 初中 2015级QA class&quot;, &quot;appTitle&quot;: &quot;芝士网皇家学院&quot;, &quot;isAllow&quot;: 0, &quot;classType&quot;: &quot;Express&quot;, &quot;classTypeTitle&quot;: &quot;体验班&quot;, &quot;sessItemId&quot;: 0, &quot;isRequire&quot;: true, &quot;isRequiredEmend&quot;: false, &quot;isChecked&quot;: true, &quot;selectAsk&quot;: [{&quot;sessionId&quot;: 2624, &quot;isRequire&quot;: true }, {&quot;sessionId&quot;: 2624, &quot;isRequiredEmend&quot;: true, &quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;}], &quot;emendTypeCode&quot;: &quot;NO_NEED&quot;}], &quot;assessmentBuilderQuestionList&quot;: [{&quot;assessmentArticleId&quot;: 2982, &quot;assessmentQuestionId&quot;: 341248, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2982, &quot;assessmentQuestionId&quot;: 341249, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2982, &quot;assessmentQuestionId&quot;: 341250, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2982, &quot;assessmentQuestionId&quot;: 341251, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2982, &quot;assessmentQuestionId&quot;: 341252, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2984, &quot;assessmentQuestionId&quot;: 341253, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2984, &quot;assessmentQuestionId&quot;: 341254, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2984, &quot;assessmentQuestionId&quot;: 341255, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2984, &quot;assessmentQuestionId&quot;: 341256, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2984, &quot;assessmentQuestionId&quot;: 341257, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }] }&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341248, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341249, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341250, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341251, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 2982, &quot;QuestionId&quot;: 341252, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341253, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341254, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341255, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341256, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 2984, &quot;QuestionId&quot;: 341257, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}
else if (host == &quot;dev.zhishinet.com&quot;){
vars.put(&quot;body&quot;, &apos;{&quot;textbookSeriesId&quot;: 2, &quot;textbookId&quot;: 10, &quot;assessmentBuilderType&quot;: 2, &quot;title&quot;: &quot;短文选词填空${num}&quot;, &quot;beginDate&quot;: &quot;2018-04-10&quot;, &quot;endDate&quot;: &quot;2100-04-13&quot;, &quot;isOptionRandom&quot;: true, &quot;isQuestionFeedback&quot;: true, &quot;showSubTitle&quot;: false, &quot;isTimerOn&quot;: true, &quot;isPublish&quot;: true, &quot;duration&quot;: 45, &quot;subjectId&quot;: 1, &quot;assessmentBuilderUnitList&quot;: [{&quot;unitName&quot;: &quot;Starter Unit 1&quot;, &quot;unitNo&quot;: 1, &quot;unitId&quot;: 189 }], &quot;assessmentBuilderClassificationList&quot;: [{&quot;assessmentClassification&quot;: 1, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 2, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 3, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 6, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 7, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 8, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 9, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 10, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 11, &quot;assessmentQuestionCount&quot;: 3 }], &quot;assessmentBuilderSessionList&quot;: [{&quot;sessionId&quot;: 2624, &quot;globalSessionTitle&quot;: &quot;QAclass&quot;, &quot;checkFlag&quot;: false, &quot;sessItemId&quot;: 2, &quot;isRequire&quot;: true, &quot;isRequiredEmend&quot;: false, &quot;isChecked&quot;: true, &quot;selectAsk&quot;: [{&quot;sessionId&quot;: 2624, &quot;isRequire&quot;: true }, {&quot;sessionId&quot;: 2624, &quot;isRequiredEmend&quot;: true, &quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;}], &quot;emendTypeCode&quot;: &quot;NO_NEED&quot;}], &quot;suitRelAssessmentBuilderList&quot;: [{&quot;suitId&quot;: 16452 }], &quot;assessmentBuilderQuestionList&quot;: [{&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337196, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337197, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337198, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337199, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337200, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337181, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337182, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337183, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337184, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337185, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337186, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337187, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337188, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337189, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337190, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337191, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337192, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337193, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337194, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337195, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }] }&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337191, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337192, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337193, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337194, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337195, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337196, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337197, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337198, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337199, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337200, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false },  {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 23, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337181, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 24, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337182, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 25, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337183, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 26, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337184, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 27, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337185, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 28, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337186, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 29, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337187, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 30, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337188, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 31, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337189, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 32, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337190, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}
else if(host == &quot;staging.zhishinet.com&quot;){
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;:null,&quot;textbookSeriesId&quot;:1,&quot;textbookId&quot;:1,&quot;assessmentBuilderType&quot;:2,&quot;title&quot;:&quot;短文选词填空${num}&quot;,&quot;beginDate&quot;:&quot;2018-04-13&quot;,&quot;endDate&quot;:&quot;2100-04-13&quot;,&quot;isOptionRandom&quot;:true,&quot;isQuestionFeedback&quot;:true,&quot;showSubTitle&quot;:false,&quot;isTimerOn&quot;:true,&quot;isPublish&quot;:true,&quot;duration&quot;:75,&quot;subjectId&quot;:1,&quot;assessmentBuilderUnitList&quot;:[{&quot;unitNo&quot;:1,&quot;unitName&quot;:&quot;Unit 1&quot;}],&quot;assessmentBuilderClassificationList&quot;:[{&quot;assessmentClassification&quot;:1,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:2,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:3,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:6,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:7,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:8,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:9,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:10,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:11,&quot;assessmentQuestionCount&quot;:6}],&quot;assessmentBuilderSessionList&quot;:[{&quot;sessionId&quot;:2624,&quot;globalSessionTitle&quot;:&quot;2015级QAclass&quot;,&quot;checkFlag&quot;:false,&quot;code&quot;:&quot;10002197&quot;,&quot;title&quot;:&quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&quot;appTitle&quot;:&quot;芝士网皇家学院&quot;,&quot;isAllow&quot;:1,&quot;classType&quot;:&quot;Express&quot;,&quot;classTypeTitle&quot;:&quot;体验班&quot;,&quot;sessItemId&quot;:0,&quot;isRequire&quot;:true,&quot;isRequiredEmend&quot;:false,&quot;isChecked&quot;:true,&quot;selectAsk&quot;:[{&quot;sessionId&quot;:2624,&quot;isRequire&quot;:true},{&quot;sessionId&quot;:2624,&quot;isRequiredEmend&quot;:true,&quot;emendTypeCode&quot;:&quot;ERROR_INTENSIFY_QUESTIONS&quot;}],&quot;emendTypeCode&quot;:&quot;NO_NEED&quot;}],&quot;assessmentBuilderQuestionList&quot;:[{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346327,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346328,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346329,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346330,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3067,&quot;assessmentQuestionId&quot;:346331,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346332,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346333,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346334,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346335,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3068,&quot;assessmentQuestionId&quot;:346336,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346337,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346338,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346339,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346340,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3069,&quot;assessmentQuestionId&quot;:346341,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346342,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346343,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346344,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346345,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346346,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346347,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346348,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346349,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346350,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3070,&quot;assessmentQuestionId&quot;:346351,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3072,&quot;assessmentQuestionId&quot;:346352,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3072,&quot;assessmentQuestionId&quot;:346353,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3072,&quot;assessmentQuestionId&quot;:346354,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3072,&quot;assessmentQuestionId&quot;:346355,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3072,&quot;assessmentQuestionId&quot;:346356,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3073,&quot;assessmentQuestionId&quot;:346357,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3073,&quot;assessmentQuestionId&quot;:346358,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3073,&quot;assessmentQuestionId&quot;:346359,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3073,&quot;assessmentQuestionId&quot;:346360,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3073,&quot;assessmentQuestionId&quot;:346361,&quot;questionTypeId&quot;:22,&quot;tabNum&quot;:1}],&quot;suitRelAssessmentBuilderList&quot;:[{&quot;suitId&quot;:27224}]}&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346327, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346328, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346329, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346330, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 3067, &quot;QuestionId&quot;: 346331, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346332, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346333, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346334, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346335, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 3068, &quot;QuestionId&quot;: 346336, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false },  {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 23, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346337, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 24, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346338, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 25, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346339, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 26, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346340, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 27, &quot;ArticleId&quot;: 3069, &quot;QuestionId&quot;: 346341, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] },], &quot;FeedbackViewed&quot;: false }] }]&apos;)}</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setHomeworkSuitSeries-创建套题册" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesName&quot;: &quot;${suitSeriesName}&quot;,&#xd;
	&quot;homeworkTextbookId&quot;: 10,&#xd;
	&quot;description&quot;: &quot;自动化测试&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/setHomeworkSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1918375055">suitSeriesName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="196955260">
                <stringProp name="1854822956">短文选词${num}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取suitSeriesId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitSeriesId</stringProp>
            <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addHomeworkSuitSeriesSessions-套题册关联班级" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesId&quot;: ${suitSeriesId},&#xd;
	&quot;suitSeriesSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: &quot;2624&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/addHomeworkSuitSeriesSessions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="article-关联题库文章" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/article?page=1&amp;pageSize=10&amp;type=Vocabulary</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取articleId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">articleId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;articleId&quot;:(\d+),&quot;title&quot;:&quot;单句选词适当形式填空([a-zA-Z0-9-]+)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">articleId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[?(@.articleQuestionTypes[0].type==22)].articleId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="false">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkSuit-套题保存（关联题库和关联套题册）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;articles&quot;: [{&#xd;
		&quot;articleId&quot;: 2988,&#xd;
		&quot;questionType&quot;: 22,&#xd;
		&quot;questionCount&quot;: 4&#xd;
	}],&#xd;
	&quot;homeworkSuit&quot;: {&#xd;
		&quot;suitId&quot;: null,&#xd;
		&quot;suitName&quot;: &quot;短文选词适当形式填空${num}&quot;,&#xd;
		&quot;displayOrder&quot;: &quot;&quot;,&#xd;
		&quot;startDate&quot;: null,&#xd;
		&quot;endDate&quot;: null,&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;,&#xd;
		&quot;suitType&quot;: &quot;VOCABULARY_PRACTICE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;objectVersionNumber&quot;: 1,&#xd;
		&quot;homeworkTextbookSeriesId&quot;: 2,&#xd;
		&quot;homeworkTextbookId&quot;: 10,&#xd;
		&quot;homeworkSuitUnitList&quot;: [{&#xd;
			&quot;homeworkUnitId&quot;: 1&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 2&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 3&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 4&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 5&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 6&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 7&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 8&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 9&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 10&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 11&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 678&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 672&#xd;
		}],&#xd;
		&quot;homeworkSuitRelSeriesList&quot;: [{&#xd;
			&quot;suitSeriesId&quot;: ${suitSeriesId}&#xd;
		}],&#xd;
		&quot;tagLines&quot;: [],&#xd;
		&quot;suitDistrictsList&quot;: [{&#xd;
			&quot;provinceId&quot;: &quot;&quot;,&#xd;
			&quot;cityId&quot;: &quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
	&quot;pools&quot;: [],&#xd;
	&quot;oralParagraphs&quot;: []&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/homeworkSuit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">精选练习</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取suitId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">suitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.suitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="combine-套题发布" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;: [${suitId}],&#xd;
	&quot;status&quot;: &quot;RELEASE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/suit/combine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-短文选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;短文选词适当形式填空${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1528624560,&#xd;
	&quot;endDate&quot;: 4117363140,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;disableFeedback&quot;: false,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;duration&quot;: 4,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: 2624,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2015级QAclass&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10002197&quot;,&#xd;
		&quot;title&quot;: &quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&#xd;
		&quot;appTitle&quot;: &quot;芝士网皇家学院&quot;,&#xd;
		&quot;isAllow&quot;: 0,&#xd;
		&quot;classType&quot;: &quot;Express&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;体验班&quot;,&#xd;
		&quot;isGroupEnable&quot;: 1,&#xd;
		&quot;sessItemId&quot;: 1,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: false,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;emendTypeCode&quot;: &quot;NO_NEED&quot;,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;combineQuestions&quot;: {&#xd;
		&quot;vocabularyQuestionsList&quot;: [],&#xd;
		&quot;vocabularyQuestionsFIDList&quot;: [],&#xd;
		&quot;vocabularyArticleQuestionsList&quot;: [{&#xd;
			&quot;duration&quot;: 120,&#xd;
			&quot;articleId&quot;: ${articleId},&#xd;
			&quot;articleText&quot;: &quot;&quot;,&#xd;
			&quot;articleTitle&quot;: &quot;短文选词适当形式填空&quot;,&#xd;
			&quot;comprehensionUnitId&quot;: null,&#xd;
			&quot;comprehensionUnitText&quot;: null,&#xd;
			&quot;articleType&quot;: 22,&#xd;
			&quot;questionCount&quot;: 4,&#xd;
			&quot;difficultyId&quot;: 1,&#xd;
			&quot;assessmentBuilderArticleQuestions&quot;: {&#xd;
				&quot;articleType&quot;: 22,&#xd;
				&quot;assessmentQuestions&quot;: [{&#xd;
					&quot;questionId&quot;: 341184,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3216,&#xd;
					&quot;subMasteryId&quot;: 3385,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818399,&#xd;
						&quot;optionText&quot;: &quot;doctors&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818400,&#xd;
						&quot;optionText&quot;: &quot;clearly&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818401,&#xd;
						&quot;optionText&quot;: &quot;hopes&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818402,&#xd;
						&quot;optionText&quot;: &quot;herself&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37213,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 78,&#xd;
					&quot;correctFeedback&quot;: &quot;此处句意：没有医生知道疾病的原因。None of+名词复数，故填doctors。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;短文选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;doctors&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;doctors&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341185,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3334,&#xd;
					&quot;subMasteryId&quot;: 7602,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818403,&#xd;
						&quot;optionText&quot;: &quot;clearly&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818404,&#xd;
						&quot;optionText&quot;: &quot;herself&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818405,&#xd;
						&quot;optionText&quot;: &quot;hopes&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818406,&#xd;
						&quot;optionText&quot;: &quot;parents&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37214,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 78,&#xd;
					&quot;correctFeedback&quot;: &quot;此处句意：她看不清楚也听不清楚。修饰动词应使用副词，故填clearly。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;短文选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;clearly&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;clearly&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341186,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3888,&#xd;
					&quot;subMasteryId&quot;: 3889,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818407,&#xd;
						&quot;optionText&quot;: &quot;clearly&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818408,&#xd;
						&quot;optionText&quot;: &quot;hopes&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818409,&#xd;
						&quot;optionText&quot;: &quot;parents&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818410,&#xd;
						&quot;optionText&quot;: &quot;doctors&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37215,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 78,&#xd;
					&quot;correctFeedback&quot;: &quot;此处句意：她对自己说，无论发生什么，我绝不放弃。主语与宾语指代同一个人，应使用反身代词，故填herself。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;短文选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;herself&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;herself&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341187,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 22,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3177,&#xd;
					&quot;masteryId&quot;: 3193,&#xd;
					&quot;subMasteryId&quot;: 4044,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818411,&#xd;
						&quot;optionText&quot;: &quot;herself&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818412,&#xd;
						&quot;optionText&quot;: &quot;clearly&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818413,&#xd;
						&quot;optionText&quot;: &quot;doctors&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818414,&#xd;
						&quot;optionText&quot;: &quot;hopes&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37216,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 78,&#xd;
					&quot;correctFeedback&quot;: &quot;此处句意：她希望享受生活。主语是第三人称单数，故填hopes。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;短文选词适当形式填空&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;hopes&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;hopes&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}]&#xd;
			},&#xd;
			&quot;assessmentArticleBlanks&quot;: [{&#xd;
				&quot;blankId&quot;: 37215,&#xd;
				&quot;blankText&quot;: &quot;hopes&quot;,&#xd;
				&quot;sequence&quot;: &quot;B3&quot;,&#xd;
				&quot;order&quot;: 1,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37214,&#xd;
				&quot;blankText&quot;: &quot;clearly&quot;,&#xd;
				&quot;sequence&quot;: &quot;B2&quot;,&#xd;
				&quot;order&quot;: 2,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37216,&#xd;
				&quot;blankText&quot;: &quot;doctors&quot;,&#xd;
				&quot;sequence&quot;: &quot;B4&quot;,&#xd;
				&quot;order&quot;: 3,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37213,&#xd;
				&quot;blankText&quot;: &quot;parents&quot;,&#xd;
				&quot;sequence&quot;: &quot;B1&quot;,&#xd;
				&quot;order&quot;: 4,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}],&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true&#xd;
		}],&#xd;
		&quot;readingList&quot;: [],&#xd;
		&quot;videoQuestions&quot;: [],&#xd;
		&quot;oralReadSentenceList&quot;: [],&#xd;
		&quot;oralGuessWordList&quot;: [],&#xd;
		&quot;oralReadWordList&quot;: [],&#xd;
		&quot;oralTopicDescribeList&quot;: []&#xd;
	},&#xd;
	&quot;suitList&quot;: [{&#xd;
		&quot;suitId&quot;: ${suitId},&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-短文选词填空" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${body}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkInfo--短文选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew(获取sessionUserTrackingId)--短文选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:53474,&quot;sessionUserTrackingId&quot;:(\d+),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework--短文选词填空" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId_g1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
              <elementProp name="randomNum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0.4781015824927144</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">randomNum</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--短文选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 53474,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341184,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 2,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341185,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 3,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341186,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 4,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341187,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">dev</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--短文选词填空" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 5866,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;:${Questions},&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework--短文选词填空" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;assessmentId&quot;: &quot;${assessmentId}&quot;,&#xd;
    &quot;sessionId&quot;: 2624&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="同义选择" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1522830240000</longProp>
        <longProp name="ThreadGroup.end_time">1522830240000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ModuleController guiclass="ModuleControllerGui" testclass="ModuleController" testname="getToken" enabled="true">
          <collectionProp name="ModuleController.node_path">
            <stringProp name="23750841">工作台</stringProp>
            <stringProp name="869052411">测试计划</stringProp>
            <stringProp name="1966366787">getToken</stringProp>
          </collectionProp>
        </ModuleController>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="配置suitId" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var host = &quot;${host}&quot;;
if (host == &quot;test.zhishinet.com&quot;) 
vars.put(&quot;suitId&quot;, 18184);
else if (host == &quot;dev.zhishinet.com&quot;) 
vars.put(&quot;suitId&quot;, 15405);
else if(host == &quot;staging.zhishinet.com&quot;)
vars.put(&quot;suitId&quot;, 19429);
</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <BSFPreProcessor guiclass="TestBeanGUI" testclass="BSFPreProcessor" testname="配置body Data" enabled="false">
          <stringProp name="scriptLanguage">javascript</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">var host = &quot;${host}&quot;;
if (host == &quot;test.zhishinet.com&quot;){ 
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;:null,&quot;textbookSeriesId&quot;:23,&quot;textbookId&quot;:74,&quot;assessmentBuilderType&quot;:2,&quot;title&quot;:&quot;同义选择${num}&quot;,&quot;beginDate&quot;:&quot;2018-04-09&quot;,&quot;endDate&quot;:&quot;2100-04-12&quot;,&quot;isOptionRandom&quot;:true,&quot;isQuestionFeedback&quot;:true,&quot;showSubTitle&quot;:false,&quot;isTimerOn&quot;:true,&quot;isPublish&quot;:true,&quot;duration&quot;:2,&quot;subjectId&quot;:1,&quot;assessmentBuilderUnitList&quot;:[{&quot;unitNo&quot;:2,&quot;unitName&quot;:&quot;第二单元&quot;}],&quot;assessmentBuilderClassificationList&quot;:[{&quot;assessmentClassification&quot;:1,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:2,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:3,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:6,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:7,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:8,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:9,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:10,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:11,&quot;assessmentQuestionCount&quot;:1}],&quot;assessmentBuilderSessionList&quot;:[{&quot;sessionId&quot;:2624,&quot;globalSessionTitle&quot;:&quot;2015级QAclass&quot;,&quot;checkFlag&quot;:false,&quot;code&quot;:&quot;10002197&quot;,&quot;title&quot;:&quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&quot;appTitle&quot;:&quot;芝士网皇家学院&quot;,&quot;isAllow&quot;:0,&quot;classType&quot;:&quot;Express&quot;,&quot;classTypeTitle&quot;:&quot;体验班&quot;,&quot;sessItemId&quot;:0,&quot;isRequire&quot;:true,&quot;isRequiredEmend&quot;:false,&quot;isChecked&quot;:true,&quot;selectAsk&quot;:[{&quot;sessionId&quot;:2624,&quot;isRequire&quot;:true},{&quot;sessionId&quot;:2624,&quot;isRequiredEmend&quot;:true,&quot;emendTypeCode&quot;:&quot;ERROR_INTENSIFY_QUESTIONS&quot;}],&quot;emendTypeCode&quot;:&quot;NO_NEED&quot;}],&quot;assessmentBuilderQuestionList&quot;:[{&quot;assessmentArticleId&quot;:2979,&quot;assessmentQuestionId&quot;:341240,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2979,&quot;assessmentQuestionId&quot;:341241,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2979,&quot;assessmentQuestionId&quot;:341242,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:2979,&quot;assessmentQuestionId&quot;:341243,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1}]}&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2979, &quot;QuestionId&quot;: 341240, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2979, &quot;QuestionId&quot;: 341241, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2979, &quot;QuestionId&quot;: 341242, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2979, &quot;QuestionId&quot;: 341243, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}
else if (host == &quot;dev.zhishinet.com&quot;){
vars.put(&quot;body&quot;, &apos;{&quot;textbookSeriesId&quot;: 1, &quot;textbookId&quot;: 1, &quot;assessmentBuilderType&quot;: 2, &quot;title&quot;: &quot;同义选择${num}&quot;, &quot;beginDate&quot;: &quot;2018-04-09&quot;, &quot;endDate&quot;: &quot;2100-04-12&quot;, &quot;isOptionRandom&quot;: true, &quot;isQuestionFeedback&quot;: true, &quot;showSubTitle&quot;: false, &quot;isTimerOn&quot;: true, &quot;isPublish&quot;: true, &quot;duration&quot;: 75, &quot;subjectId&quot;: 1, &quot;assessmentBuilderUnitList&quot;: [{&quot;unitName&quot;: &quot;Unit 1&quot;, &quot;unitNo&quot;: 1, &quot;unitId&quot;: 1 }], &quot;assessmentBuilderClassificationList&quot;: [{&quot;assessmentClassification&quot;: 1, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 2, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 3, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 6, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 7, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 8, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 9, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 10, &quot;assessmentQuestionCount&quot;: 0 }, {&quot;assessmentClassification&quot;: 11, &quot;assessmentQuestionCount&quot;: 6 }], &quot;assessmentBuilderSessionList&quot;: [{&quot;sessionId&quot;: 2624, &quot;globalSessionTitle&quot;: &quot;QAclass&quot;, &quot;checkFlag&quot;: false, &quot;sessItemId&quot;: 2, &quot;isRequire&quot;: true, &quot;isRequiredEmend&quot;: true, &quot;isChecked&quot;: true, &quot;selectAsk&quot;: [{&quot;sessionId&quot;: 2624, &quot;isRequire&quot;: true }, {&quot;sessionId&quot;: 2624, &quot;isRequiredEmend&quot;: true, &quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;}] }], &quot;suitRelAssessmentBuilderList&quot;: [{&quot;suitId&quot;: 15405 }], &quot;assessmentBuilderQuestionList&quot;: [{&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337196, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337197, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337198, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337199, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2801, &quot;assessmentQuestionId&quot;: 337200, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337181, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337182, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337183, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337184, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337185, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337186, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337187, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337188, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337189, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2799, &quot;assessmentQuestionId&quot;: 337190, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337191, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337192, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337193, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337194, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2800, &quot;assessmentQuestionId&quot;: 337195, &quot;questionTypeId&quot;: 22, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2802, &quot;assessmentQuestionId&quot;: 337201, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2802, &quot;assessmentQuestionId&quot;: 337202, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2802, &quot;assessmentQuestionId&quot;: 337203, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2802, &quot;assessmentQuestionId&quot;: 337204, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2803, &quot;assessmentQuestionId&quot;: 337205, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2803, &quot;assessmentQuestionId&quot;: 337206, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2803, &quot;assessmentQuestionId&quot;: 337207, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2803, &quot;assessmentQuestionId&quot;: 337208, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2804, &quot;assessmentQuestionId&quot;: 337209, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2804, &quot;assessmentQuestionId&quot;: 337210, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2804, &quot;assessmentQuestionId&quot;: 337211, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }, {&quot;assessmentArticleId&quot;: 2804, &quot;assessmentQuestionId&quot;: 337212, &quot;questionTypeId&quot;: 23, &quot;tabNum&quot;: 1 }] }&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337191, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337192, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337193, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337194, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 5, &quot;ArticleId&quot;: 2800, &quot;QuestionId&quot;: 337195, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337196, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337197, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337198, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337199, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 10, &quot;ArticleId&quot;: 2801, &quot;QuestionId&quot;: 337200, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false },{&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 23, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337181, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 24, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337182, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 25, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337183, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 26, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337184, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 27, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337185, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 28, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337186, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 29, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337187, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 30, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337188, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 31, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337189, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 32, &quot;ArticleId&quot;: 2799, &quot;QuestionId&quot;: 337190, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 11, &quot;ArticleId&quot;: 2802, &quot;QuestionId&quot;: 337201, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 12, &quot;ArticleId&quot;: 2802, &quot;QuestionId&quot;: 337202, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 13, &quot;ArticleId&quot;: 2802, &quot;QuestionId&quot;: 337203, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 14, &quot;ArticleId&quot;: 2802, &quot;QuestionId&quot;: 337204, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 15, &quot;ArticleId&quot;: 2803, &quot;QuestionId&quot;: 337205, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 16, &quot;ArticleId&quot;: 2803, &quot;QuestionId&quot;: 337206, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 17, &quot;ArticleId&quot;: 2803, &quot;QuestionId&quot;: 337207, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 18, &quot;ArticleId&quot;: 2803, &quot;QuestionId&quot;: 337208, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 19, &quot;ArticleId&quot;: 2804, &quot;QuestionId&quot;: 337209, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 20, &quot;ArticleId&quot;: 2804, &quot;QuestionId&quot;: 337210, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 21, &quot;ArticleId&quot;: 2804, &quot;QuestionId&quot;: 337211, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 22, &quot;ArticleId&quot;: 2804, &quot;QuestionId&quot;: 337212, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}
else if(host == &quot;staging.zhishinet.com&quot;){
vars.put(&quot;body&quot;,&apos;{&quot;assessmentBuilderId&quot;:null,&quot;textbookSeriesId&quot;:1,&quot;textbookId&quot;:1,&quot;assessmentBuilderType&quot;:2,&quot;title&quot;:&quot;同义选择${num}&quot;,&quot;beginDate&quot;:&quot;2018-04-12&quot;,&quot;endDate&quot;:&quot;2100-04-12&quot;,&quot;isOptionRandom&quot;:true,&quot;isQuestionFeedback&quot;:true,&quot;showSubTitle&quot;:false,&quot;isTimerOn&quot;:true,&quot;isPublish&quot;:true,&quot;duration&quot;:20,&quot;subjectId&quot;:1,&quot;assessmentBuilderUnitList&quot;:[{&quot;unitNo&quot;:1,&quot;unitName&quot;:&quot;Unit 1&quot;}],&quot;assessmentBuilderClassificationList&quot;:[{&quot;assessmentClassification&quot;:1,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:2,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:3,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:6,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:7,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:8,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:9,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:10,&quot;assessmentQuestionCount&quot;:0},{&quot;assessmentClassification&quot;:11,&quot;assessmentQuestionCount&quot;:2}],&quot;assessmentBuilderSessionList&quot;:[{&quot;sessionId&quot;:2624,&quot;globalSessionTitle&quot;:&quot;2015级QAclass&quot;,&quot;checkFlag&quot;:false,&quot;code&quot;:&quot;10002197&quot;,&quot;title&quot;:&quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&quot;appTitle&quot;:&quot;芝士网皇家学院&quot;,&quot;isAllow&quot;:1,&quot;classType&quot;:&quot;Express&quot;,&quot;classTypeTitle&quot;:&quot;体验班&quot;,&quot;sessItemId&quot;:0,&quot;isRequire&quot;:true,&quot;isRequiredEmend&quot;:false,&quot;isChecked&quot;:true,&quot;selectAsk&quot;:[{&quot;sessionId&quot;:2624,&quot;isRequire&quot;:true},{&quot;sessionId&quot;:2624,&quot;isRequiredEmend&quot;:true,&quot;emendTypeCode&quot;:&quot;ERROR_INTENSIFY_QUESTIONS&quot;}],&quot;emendTypeCode&quot;:&quot;NO_NEED&quot;}],&quot;assessmentBuilderQuestionList&quot;:[{&quot;assessmentArticleId&quot;:3065,&quot;assessmentQuestionId&quot;:346319,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3065,&quot;assessmentQuestionId&quot;:346320,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3065,&quot;assessmentQuestionId&quot;:346321,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3065,&quot;assessmentQuestionId&quot;:346322,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3066,&quot;assessmentQuestionId&quot;:346323,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3066,&quot;assessmentQuestionId&quot;:346324,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3066,&quot;assessmentQuestionId&quot;:346325,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1},{&quot;assessmentArticleId&quot;:3066,&quot;assessmentQuestionId&quot;:346326,&quot;questionTypeId&quot;:23,&quot;tabNum&quot;:1}],&quot;suitRelAssessmentBuilderList&quot;:[{&quot;suitId&quot;:27222}]}&apos;);
vars.put(&quot;Questions&quot;,&apos;[{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 1, &quot;ArticleId&quot;: 3065, &quot;QuestionId&quot;: 346319, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 2, &quot;ArticleId&quot;: 3065, &quot;QuestionId&quot;: 346320, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 3, &quot;ArticleId&quot;: 3065, &quot;QuestionId&quot;: 346321, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 4, &quot;ArticleId&quot;: 3065, &quot;QuestionId&quot;: 346322, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }, {&quot;GroupType&quot;: 2, &quot;UserTimeSpent&quot;: 0, &quot;Questions&quot;: [{&quot;isChange&quot;: true, &quot;questionNumber&quot;: 6, &quot;ArticleId&quot;: 3066, &quot;QuestionId&quot;: 346323, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 7, &quot;ArticleId&quot;: 3066, &quot;QuestionId&quot;: 346324, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 8, &quot;ArticleId&quot;: 3066, &quot;QuestionId&quot;: 346325, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }, {&quot;isChange&quot;: true, &quot;questionNumber&quot;: 9, &quot;ArticleId&quot;: 3066, &quot;QuestionId&quot;: 346326, &quot;UserResponse&quot;: [], &quot;IsQuestionCorrect&quot;: 0, &quot;BlankAnswers&quot;: [&quot;&quot;], &quot;traceBlankAnswers&quot;: [&quot;&quot;] }], &quot;FeedbackViewed&quot;: false }] }]&apos;)}</stringProp>
        </BSFPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setHomeworkSuitSeries-创建套题册" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesName&quot;: &quot;${suitSeriesName}&quot;,&#xd;
	&quot;homeworkTextbookId&quot;: 10,&#xd;
	&quot;description&quot;: &quot;自动化测试&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/setHomeworkSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1918375055">suitSeriesName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-435422164">
                <stringProp name="-1968191029">同义选择${num}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取suitSeriesId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitSeriesId</stringProp>
            <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addHomeworkSuitSeriesSessions-套题册关联班级" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesId&quot;: ${suitSeriesId},&#xd;
	&quot;suitSeriesSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: &quot;2624&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/addHomeworkSuitSeriesSessions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="article-关联题库文章" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/article?page=1&amp;pageSize=10&amp;type=Vocabulary</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">articleId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.rows[?(@.articleQuestionTypes[0].type==23)].articleId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkSuit-套题保存（关联题库和关联套题册）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;articles&quot;: [{&#xd;
		&quot;articleId&quot;: ${articleId},&#xd;
		&quot;questionType&quot;: 23,&#xd;
		&quot;questionCount&quot;: 4&#xd;
	}],&#xd;
	&quot;homeworkSuit&quot;: {&#xd;
		&quot;suitId&quot;: null,&#xd;
		&quot;suitName&quot;: &quot;同义选择${num}&quot;,&#xd;
		&quot;displayOrder&quot;: &quot;&quot;,&#xd;
		&quot;startDate&quot;: null,&#xd;
		&quot;endDate&quot;: null,&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;,&#xd;
		&quot;suitType&quot;: &quot;VOCABULARY_PRACTICE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;objectVersionNumber&quot;: 1,&#xd;
		&quot;homeworkTextbookSeriesId&quot;: 2,&#xd;
		&quot;homeworkTextbookId&quot;: 10,&#xd;
		&quot;homeworkSuitUnitList&quot;: [{&#xd;
			&quot;homeworkUnitId&quot;: 1&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 2&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 3&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 4&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 5&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 6&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 7&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 8&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 9&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 10&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 11&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 678&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 672&#xd;
		}],&#xd;
		&quot;homeworkSuitRelSeriesList&quot;: [{&#xd;
			&quot;suitSeriesId&quot;: ${suitSeriesId}&#xd;
		}],&#xd;
		&quot;tagLines&quot;: [],&#xd;
		&quot;suitDistrictsList&quot;: [{&#xd;
			&quot;provinceId&quot;: &quot;&quot;,&#xd;
			&quot;cityId&quot;: &quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
	&quot;pools&quot;: [],&#xd;
	&quot;oralParagraphs&quot;: []&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/homeworkSuit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">精选练习</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取suitId" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">suitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.suitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="combine-套题发布" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;: [${suitId}],&#xd;
	&quot;status&quot;: &quot;RELEASE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/suit/combine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-同义选择" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;同义选择作业&quot;,&#xd;
	&quot;beginDate&quot;: 1528624560,&#xd;
	&quot;endDate&quot;: 4117363140,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;disableFeedback&quot;: false,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;duration&quot;: 4,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: 2624,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2015级QAclass&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10002197&quot;,&#xd;
		&quot;title&quot;: &quot;芝士网皇家学院 本部 初中 2015级QA class&quot;,&#xd;
		&quot;appTitle&quot;: &quot;芝士网皇家学院&quot;,&#xd;
		&quot;isAllow&quot;: 0,&#xd;
		&quot;classType&quot;: &quot;Express&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;体验班&quot;,&#xd;
		&quot;isGroupEnable&quot;: 1,&#xd;
		&quot;sessItemId&quot;: 1,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: false,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;emendTypeCode&quot;: &quot;NO_NEED&quot;,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: 2624,&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}]&#xd;
	}],&#xd;
	&quot;combineQuestions&quot;: {&#xd;
		&quot;vocabularyQuestionsList&quot;: [],&#xd;
		&quot;vocabularyQuestionsFIDList&quot;: [],&#xd;
		&quot;vocabularyArticleQuestionsList&quot;: [{&#xd;
			&quot;duration&quot;: 120,&#xd;
			&quot;articleId&quot;: ${articleId},&#xd;
			&quot;articleText&quot;: &quot;[B1_look after]&amp;nbsp; Xiao Ming has to &lt;u&gt;take care of&lt;/u&gt; his mother at home because his mother is ill.&lt;br /&gt;\r\n&lt;br /&gt;\r\n[B2_kind of] Why do you like penguins?&lt;br&gt;--Because they&apos;re &lt;u&gt;a little&lt;/u&gt; cute.&lt;br /&gt;\r\n&lt;br /&gt;\r\n[B3_a lot of]&amp;nbsp; There are &lt;u&gt;many&lt;/u&gt; books on the shelf. You can borrow one.&lt;br /&gt;\r\n&lt;br /&gt;\r\n[B4_reach] The famous soccer team will &lt;u&gt;arrive in&lt;/u&gt; Shanghai tomorrow.&amp;nbsp; &amp;nbsp;&quot;,&#xd;
			&quot;articleTitle&quot;: &quot;同义选择-04172&quot;,&#xd;
			&quot;comprehensionUnitId&quot;: null,&#xd;
			&quot;comprehensionUnitText&quot;: null,&#xd;
			&quot;articleType&quot;: 23,&#xd;
			&quot;questionCount&quot;: 4,&#xd;
			&quot;difficultyId&quot;: 1,&#xd;
			&quot;assessmentBuilderArticleQuestions&quot;: {&#xd;
				&quot;articleType&quot;: 23,&#xd;
				&quot;assessmentQuestions&quot;: [{&#xd;
					&quot;questionId&quot;: 341184,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 23,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3216,&#xd;
					&quot;subMasteryId&quot;: 3385,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818399,&#xd;
						&quot;optionText&quot;: &quot;a lot of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818400,&#xd;
						&quot;optionText&quot;: &quot;reach&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818401,&#xd;
						&quot;optionText&quot;: &quot;look after&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818402,&#xd;
						&quot;optionText&quot;: &quot;kind of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37213,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 77,&#xd;
					&quot;correctFeedback&quot;: &quot;take care of = look after 照顾。句意：小明要在家照顾他的母亲，因为他母亲病了。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;同义选择&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;look after&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;look after&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341185,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 23,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3334,&#xd;
					&quot;subMasteryId&quot;: 7602,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818403,&#xd;
						&quot;optionText&quot;: &quot;a lot of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818404,&#xd;
						&quot;optionText&quot;: &quot;reach&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818405,&#xd;
						&quot;optionText&quot;: &quot;look after&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818406,&#xd;
						&quot;optionText&quot;: &quot;kind of&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37214,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 77,&#xd;
					&quot;correctFeedback&quot;: &quot;a little = kind of 有点儿。句意：--你为什么喜欢企鹅？--因为它们有点可爱。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;同义选择&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;kind of&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;kind of&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341186,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 23,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3173,&#xd;
					&quot;masteryId&quot;: 3888,&#xd;
					&quot;subMasteryId&quot;: 3889,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818407,&#xd;
						&quot;optionText&quot;: &quot;a lot of&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818408,&#xd;
						&quot;optionText&quot;: &quot;reach&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818409,&#xd;
						&quot;optionText&quot;: &quot;look after&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818410,&#xd;
						&quot;optionText&quot;: &quot;kind of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37215,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 77,&#xd;
					&quot;correctFeedback&quot;: &quot;many = a lot of 许多。句意：书架上有许多书。你可以借一本。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;同义选择&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;a lot of (lots of)&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;a lot of&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}, {&#xd;
					&quot;questionId&quot;: 341187,&#xd;
					&quot;questionText&quot;: &quot;&quot;,&#xd;
					&quot;questionTypeId&quot;: 23,&#xd;
					&quot;categoryId&quot;: 3172,&#xd;
					&quot;subCategoryId&quot;: 3177,&#xd;
					&quot;masteryId&quot;: 3193,&#xd;
					&quot;subMasteryId&quot;: 4044,&#xd;
					&quot;questionOptions&quot;: [{&#xd;
						&quot;optionId&quot;: 818411,&#xd;
						&quot;optionText&quot;: &quot;a lot of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 1,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818412,&#xd;
						&quot;optionText&quot;: &quot;reach&quot;,&#xd;
						&quot;isCorrect&quot;: 1,&#xd;
						&quot;sortOrder&quot;: 2,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818413,&#xd;
						&quot;optionText&quot;: &quot;look after&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 3,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}, {&#xd;
						&quot;optionId&quot;: 818414,&#xd;
						&quot;optionText&quot;: &quot;kind of&quot;,&#xd;
						&quot;isCorrect&quot;: 0,&#xd;
						&quot;sortOrder&quot;: 4,&#xd;
						&quot;questionId&quot;: null,&#xd;
						&quot;inputType&quot;: null,&#xd;
						&quot;questionTypeId&quot;: null&#xd;
					}],&#xd;
					&quot;articleId&quot;: ${articleId},&#xd;
					&quot;blankId&quot;: 37216,&#xd;
					&quot;displayOrder&quot;: null,&#xd;
					&quot;pickingLogicOrder&quot;: null,&#xd;
					&quot;homeworkQuestionTypeId&quot;: 77,&#xd;
					&quot;correctFeedback&quot;: &quot;arrive in = reach 抵达，到达。 句意：这支著名的足球队将于明天抵达上海。&quot;,&#xd;
					&quot;inCorrectFeedback&quot;: null,&#xd;
					&quot;inCorrectPercent&quot;: null,&#xd;
					&quot;inCorrectCount&quot;: null,&#xd;
					&quot;homeworkQuestionTypeTitle&quot;: &quot;同义选择&quot;,&#xd;
					&quot;taxonomyId&quot;: null,&#xd;
					&quot;taxonomyTitle&quot;: &quot;reach&quot;,&#xd;
					&quot;difficultyLevel&quot;: 2,&#xd;
					&quot;userResponse&quot;: null,&#xd;
					&quot;correctResponse&quot;: null,&#xd;
					&quot;blankText&quot;: &quot;reach&quot;,&#xd;
					&quot;tagLines&quot;: [],&#xd;
					&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
					&quot;questionAnswerDetails&quot;: null,&#xd;
					&quot;correct&quot;: null&#xd;
				}]&#xd;
			},&#xd;
			&quot;assessmentArticleBlanks&quot;: [{&#xd;
				&quot;blankId&quot;: 37215,&#xd;
				&quot;blankText&quot;: &quot;a lot of&quot;,&#xd;
				&quot;sequence&quot;: &quot;B3&quot;,&#xd;
				&quot;order&quot;: 1,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37214,&#xd;
				&quot;blankText&quot;: &quot;kind of&quot;,&#xd;
				&quot;sequence&quot;: &quot;B2&quot;,&#xd;
				&quot;order&quot;: 2,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37216,&#xd;
				&quot;blankText&quot;: &quot;reach&quot;,&#xd;
				&quot;sequence&quot;: &quot;B4&quot;,&#xd;
				&quot;order&quot;: 3,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}, {&#xd;
				&quot;blankId&quot;: 37213,&#xd;
				&quot;blankText&quot;: &quot;look after&quot;,&#xd;
				&quot;sequence&quot;: &quot;B1&quot;,&#xd;
				&quot;order&quot;: 4,&#xd;
				&quot;isSentence&quot;: &quot;0&quot;,&#xd;
				&quot;articleId&quot;: null&#xd;
			}],&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02004200137&quot;,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true&#xd;
		}],&#xd;
		&quot;readingList&quot;: [],&#xd;
		&quot;videoQuestions&quot;: [],&#xd;
		&quot;oralReadSentenceList&quot;: [],&#xd;
		&quot;oralGuessWordList&quot;: [],&#xd;
		&quot;oralReadWordList&quot;: [],&#xd;
		&quot;oralTopicDescribeList&quot;: []&#xd;
	},&#xd;
	&quot;suitList&quot;: [{&#xd;
		&quot;suitId&quot;: ${suitId},&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="publishAssessment-同义选择" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${body}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/publishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings"/>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">16</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkInfo--同义选择" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkInfo</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew(获取sessionUserTrackingId)--同义选择" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">5000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:53474,&quot;sessionUserTrackingId&quot;:(\d+),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework--同义选择" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId_g1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
              <elementProp name="randomNum" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">0.4781015824927144</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">randomNum</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2624</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--同义选择" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 53474,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341184,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 2,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341185,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 3,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341186,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}, {&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;questionNumber&quot;: 4,&#xd;
				&quot;ArticleId&quot;: ${articleId},&#xd;
				&quot;QuestionId&quot;: 341187,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">dev</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework--同义选择" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${assessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId_g1},&#xd;
	&quot;UserId&quot;: 5866,&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 2,&#xd;
			&quot;UserTimeSpent&quot;: 51,&#xd;
			&quot;Questions&quot;:${Questions},&#xd;
	&quot;AttemptNo&quot;: 1,&#xd;
	&quot;SessionId&quot;: 2624,&#xd;
	&quot;isErrorCorrection&quot;: true,&#xd;
	&quot;errorCorrectionType&quot;: &quot;emend&quot;,&#xd;
	&quot;SubjectId&quot;: 1,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework--同义选择" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;assessmentId&quot;: &quot;${assessmentId}&quot;,&#xd;
    &quot;sessionId&quot;: 2624&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
