<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.2 r1790748">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="测试计划" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="host" elementType="Argument">
            <stringProp name="Argument.name">host</stringProp>
            <stringProp name="Argument.value">${__P(host,test2.zhishinet.com)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">${__P(prot,443)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">${__P(protocol,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">${__P(username,lxz00002 )}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="passwd" elementType="Argument">
            <stringProp name="Argument.name">passwd</stringProp>
            <stringProp name="Argument.value">${__P(password,12345abc)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">${__V(${type} ${token})}</stringProp>
          </elementProp>
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="port" elementType="Argument">
            <stringProp name="Argument.name">port</stringProp>
            <stringProp name="Argument.value">443</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="protocol" elementType="Argument">
            <stringProp name="Argument.name">protocol</stringProp>
            <stringProp name="Argument.value">https</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="num" elementType="Argument">
            <stringProp name="Argument.name">num</stringProp>
            <stringProp name="Argument.value">${__Random(0,99999,)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="布置套题作业-获取教材-课本-套题册-单元-套题-购物车-选择套题-更新购物车-布置作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String globalSessionId1 = vars.get(&quot;globalSessionId1&quot;);
props.put(&quot;globalSessionId1&quot;, globalSessionId1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setHomeworkSuitSeries-创建套题册" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesName&quot;:&quot;精选练习ABC${num}&quot;,&#xd;
	&quot;homeworkTextbookId&quot;:10,&#xd;
	&quot;description&quot;:&quot;CV&quot;,&#xd;
	&quot;tagLines&quot;:[]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/setHomeworkSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1918375055">suitSeriesName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1275529123">
                <stringProp name="1041904401">精选练习套题册${num}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取suitSeriesId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitSeriesId</stringProp>
            <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addHomeworkSuitSeriesSessions-套题册关联班级" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesId&quot;:${suitSeriesId},&#xd;
	&quot;suitSeriesSessionList&quot;:[{&quot;sessionId&quot;:&quot;${globalSessionId1}&quot;}]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/addHomeworkSuitSeriesSessions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionPool-关联题库" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/questionPool?subjectId=1&amp;page=1&amp;pageSize=10&amp;title=自动化SIT流程测试专用</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取poolId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">poolId_g1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;poolId&quot;:(.*?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkSuit-套题保存（关联题库和关联套题册）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;articles&quot;: [],&#xd;
	&quot;homeworkSuit&quot;: {&#xd;
		&quot;suitId&quot;: null,&#xd;
		&quot;suitName&quot;: &quot;精选练习套题${num}&quot;,&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;,&#xd;
		&quot;suitType&quot;: &quot;VOCABULARY_PRACTICE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;objectVersionNumber&quot;: 1,&#xd;
		&quot;homeworkTextbookSeriesId&quot;: 2,&#xd;
		&quot;homeworkTextbookId&quot;: 10,&#xd;
		&quot;homeworkSuitUnitList&quot;: [{&#xd;
			&quot;homeworkUnitId&quot;: 189&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 190&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 191&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 192&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 193&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 194&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 195&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 196&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 197&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 576&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 199&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 200&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 681&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 635&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 654&#xd;
		}],&#xd;
		&quot;homeworkSuitRelSeriesList&quot;: [{&#xd;
			&quot;suitSeriesId&quot;:  ${suitSeriesId}&#xd;
		}],&#xd;
		&quot;tagLines&quot;: [],&#xd;
		&quot;suitDistrictsList&quot;: [{&#xd;
			&quot;provinceId&quot;: &quot;&quot;,&#xd;
			&quot;cityId&quot;: &quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
	&quot;pools&quot;: [{&#xd;
		&quot;poolId&quot;:${poolId_g1},&#xd;
		&quot;questionCount&quot;: 35&#xd;
	}],&#xd;
	&quot;oralParagraphs&quot;: []&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/homeworkSuit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">精选练习</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取suitId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">suitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.suitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="combine-套题发布" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;: [${suitId}],&#xd;
	&quot;status&quot;: &quot;RELEASE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/suit/combine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbookSeries-获取教材" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbookSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.title==&quot;人教版&quot;)].homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookSeriesId</stringProp>
              </elementProp>
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取homeworkTextbookId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeworkTextbookId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;homeworkTextbookId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSuitSeriesByBookId-获取套题册" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getSuitSeriesByBookId</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getClassifiedSuitList-选择套题册获取套题" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="unitId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">190</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">unitId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="suitSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${suitSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">suitSeriesId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getClassifiedSuitList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;suitId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getShoppingCart-获取购物车" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/teacher/v1/sec/getShoppingCart</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCombineAssignQuestions-获取套题详细内容" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;:[&quot;${suitId}&quot;],&#xd;
	&quot;classIds&quot;:[&quot;${globalSessionId1}&quot;]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getCombineAssignQuestions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateShoppingCart-更新购物车" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;vocabularyQuestionsList&quot;: [],&#xd;
	&quot;readingList&quot;: [],&#xd;
	&quot;videoQuestions&quot;: [],&#xd;
	&quot;oralReadSentenceList&quot;: [],&#xd;
	&quot;oralGuessWordList&quot;: [],&#xd;
	&quot;oralReadWordList&quot;: [],&#xd;
	&quot;oralTopicDescribeList&quot;: [],&#xd;
	&quot;vocabularyArticleQuestionsList&quot;: [],&#xd;
	&quot;summaryList&quot;: null,&#xd;
	&quot;caculateTime&quot;: {&#xd;
		&quot;vocabulary&quot;: null,&#xd;
		&quot;reading&quot;: null,&#xd;
		&quot;video&quot;: null&#xd;
	},&#xd;
	&quot;vocabularyQuestionsFIDList&quot;: [{&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342394,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;[BLANK] the afternoon, I like to have a cup of tea.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3638,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【in】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3638,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819690,&#xd;
				&quot;optionText&quot;: &quot;In&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;in the afternoon 在下午&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342394&#xd;
	}, {&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342395,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;I always get up [BLANK] 6: 00 a.m.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3712,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【at】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3712,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819691,&#xd;
				&quot;optionText&quot;: &quot;at&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;6: 00 a.m.是具体的时间点，前面的介词应当用at。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342395&#xd;
	}, {&#xd;
		&quot;duration&quot;: 70,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342396,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
			&quot;questionText&quot;: &quot;head → 头疼：[BLANK]&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 35,&#xd;
			&quot;title&quot;: &quot;按要求填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 6224,&#xd;
			&quot;taxonomyTitle&quot;: &quot;headache&quot;,&#xd;
			&quot;categoryId&quot;: 3172,&#xd;
			&quot;subCategoryId&quot;: 3177,&#xd;
			&quot;masteryId&quot;: 3229,&#xd;
			&quot;subMasteryId&quot;: 6224,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819692,&#xd;
				&quot;optionText&quot;: &quot;headache&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;headache n. 头疼。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
		&quot;questionId&quot;: 342396&#xd;
	}],&#xd;
	&quot;categoryOrderList&quot;: [{&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Listening&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;VocabGrammar&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 2&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;Reading&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 3&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Oral&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 4&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 24,&#xd;
		&quot;code&quot;: &quot;Video Comprehension&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 10&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 20,&#xd;
		&quot;code&quot;: &quot;Listening(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 20&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 26,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 30&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 28,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 40&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 27,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 50&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 21,&#xd;
		&quot;code&quot;: &quot;Listening(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 60&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 25,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 70&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 22,&#xd;
		&quot;code&quot;: &quot;Listening(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 80&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 23,&#xd;
		&quot;code&quot;: &quot;Listening(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 90&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 65,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 91&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 31,&#xd;
		&quot;code&quot;: &quot;Phonetic Clarification&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 100&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 30,&#xd;
		&quot;code&quot;: &quot;Phonetic Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 110&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 38,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 120&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Multiple Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 130&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 16,&#xd;
		&quot;code&quot;: &quot;Translation(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 140&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 8,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 150&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 9,&#xd;
		&quot;code&quot;: &quot;Translation(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 160&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 170&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 7,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 180&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 61,&#xd;
		&quot;code&quot;: &quot;FIB(FL-WT)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 185&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 29,&#xd;
		&quot;code&quot;: &quot;Words Translation(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 190&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;FIB(First Letter)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 200&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 17,&#xd;
		&quot;code&quot;: &quot;Proper Form(Single)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 210&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 18,&#xd;
		&quot;code&quot;: &quot;Proper Form(Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 220&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;Word Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 230&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 10,&#xd;
		&quot;code&quot;: &quot;Translation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 240&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 75,&#xd;
		&quot;code&quot;: &quot;Translation(complete)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 241&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 13,&#xd;
		&quot;code&quot;: &quot;FIB(Tense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 250&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 4,&#xd;
		&quot;code&quot;: &quot;Sentences Rewriting&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 260&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 5,&#xd;
		&quot;code&quot;: &quot;Sentence Completion&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 270&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 14,&#xd;
		&quot;code&quot;: &quot;Scenario Based Conversation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 280&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 32,&#xd;
		&quot;code&quot;: &quot;Dialogue Completion(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 290&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 12,&#xd;
		&quot;code&quot;: &quot;FIB(Preposition)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 300&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 11,&#xd;
		&quot;code&quot;: &quot;FIB(Interrogative)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 310&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 19,&#xd;
		&quot;code&quot;: &quot;Past Tense(Verb)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 320&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 35,&#xd;
		&quot;code&quot;: &quot;FIB(Requirement)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 330&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 15,&#xd;
		&quot;code&quot;: &quot;Error Correction&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 340&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 39,&#xd;
		&quot;code&quot;: &quot;COMP_BOX&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 350&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 40,&#xd;
		&quot;code&quot;: &quot;COMP_READING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 360&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 41,&#xd;
		&quot;code&quot;: &quot;COMP_CLOZE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 370&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 42,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 380&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 43,&#xd;
		&quot;code&quot;: &quot;COMP_FIRSTLETTER&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 390&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 57,&#xd;
		&quot;code&quot;: &quot;COMP_FIB&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 391&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 58,&#xd;
		&quot;code&quot;: &quot;COMP_TASK&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 392&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 62,&#xd;
		&quot;code&quot;: &quot;COMP_T or F&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 393&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 63,&#xd;
		&quot;code&quot;: &quot;COMP_BOX(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 394&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 64,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 395&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 44,&#xd;
		&quot;code&quot;: &quot;ORAL_READWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 400&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 59,&#xd;
		&quot;code&quot;: &quot;ORAL_WORDREADING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 405&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 45,&#xd;
		&quot;code&quot;: &quot;ORAL_GUESSWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 410&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 46,&#xd;
		&quot;code&quot;: &quot;ORAL_READSENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 420&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 47,&#xd;
		&quot;code&quot;: &quot;ORAL_CONVERSATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 429&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 49,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 430&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 50,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 439&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 48,&#xd;
		&quot;code&quot;: &quot;ORAL_TRANSLATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 440&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 51,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 450&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 52,&#xd;
		&quot;code&quot;: &quot;Audio(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 460&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 53,&#xd;
		&quot;code&quot;: &quot;Audio(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 470&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 54,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 480&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 55,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 490&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 56,&#xd;
		&quot;code&quot;: &quot;Audio(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 500&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 66,&#xd;
		&quot;code&quot;: &quot;ORAL_READPARAGRAPH&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1000&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 67,&#xd;
		&quot;code&quot;: &quot;RJ_Fill in Keywords&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1001&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 68,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(C)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1002&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 69,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(E)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1003&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 70,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1004&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 71,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Answer&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1005&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 72,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Choose&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1006&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 73,&#xd;
		&quot;code&quot;: &quot;RJ_Ask questions&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1007&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 74,&#xd;
		&quot;code&quot;: &quot;RJ_Complete the Dialogue&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1008&#xd;
	}],&#xd;
	&quot;suitIds&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/updateShoppingCart?subjectId=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteShoppingCart删除购物车" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/teacher/v1/sec/deleteShoppingCart?subjectId=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCombineAssignQuestions-获取套题详细内容" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;:[&quot;${suitId}&quot;],&#xd;
	&quot;classIds&quot;:[&quot;${globalSessionId1}&quot;]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getCombineAssignQuestions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateShoppingCart-更新购物车" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;vocabularyQuestionsList&quot;: [],&#xd;
	&quot;readingList&quot;: [],&#xd;
	&quot;videoQuestions&quot;: [],&#xd;
	&quot;oralReadSentenceList&quot;: [],&#xd;
	&quot;oralGuessWordList&quot;: [],&#xd;
	&quot;oralReadWordList&quot;: [],&#xd;
	&quot;oralTopicDescribeList&quot;: [],&#xd;
	&quot;vocabularyArticleQuestionsList&quot;: [],&#xd;
	&quot;summaryList&quot;: null,&#xd;
	&quot;caculateTime&quot;: {&#xd;
		&quot;vocabulary&quot;: null,&#xd;
		&quot;reading&quot;: null,&#xd;
		&quot;video&quot;: null&#xd;
	},&#xd;
	&quot;vocabularyQuestionsFIDList&quot;: [{&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342394,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;[BLANK] the afternoon, I like to have a cup of tea.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3638,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【in】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3638,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819690,&#xd;
				&quot;optionText&quot;: &quot;In&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;in the afternoon 在下午&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342394&#xd;
	}, {&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342395,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;I always get up [BLANK] 6: 00 a.m.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3712,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【at】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3712,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819691,&#xd;
				&quot;optionText&quot;: &quot;at&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;6: 00 a.m.是具体的时间点，前面的介词应当用at。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342395&#xd;
	}, {&#xd;
		&quot;duration&quot;: 70,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342396,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
			&quot;questionText&quot;: &quot;head → 头疼：[BLANK]&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 35,&#xd;
			&quot;title&quot;: &quot;按要求填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 6224,&#xd;
			&quot;taxonomyTitle&quot;: &quot;headache&quot;,&#xd;
			&quot;categoryId&quot;: 3172,&#xd;
			&quot;subCategoryId&quot;: 3177,&#xd;
			&quot;masteryId&quot;: 3229,&#xd;
			&quot;subMasteryId&quot;: 6224,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819692,&#xd;
				&quot;optionText&quot;: &quot;headache&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;headache n. 头疼。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
		&quot;questionId&quot;: 342396&#xd;
	}],&#xd;
	&quot;categoryOrderList&quot;: [{&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Listening&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;VocabGrammar&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 2&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;Reading&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 3&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Oral&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 4&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 24,&#xd;
		&quot;code&quot;: &quot;Video Comprehension&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 10&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 20,&#xd;
		&quot;code&quot;: &quot;Listening(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 20&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 26,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 30&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 28,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 40&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 27,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 50&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 21,&#xd;
		&quot;code&quot;: &quot;Listening(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 60&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 25,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 70&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 22,&#xd;
		&quot;code&quot;: &quot;Listening(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 80&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 23,&#xd;
		&quot;code&quot;: &quot;Listening(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 90&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 65,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 91&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 31,&#xd;
		&quot;code&quot;: &quot;Phonetic Clarification&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 100&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 30,&#xd;
		&quot;code&quot;: &quot;Phonetic Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 110&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 38,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 120&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Multiple Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 130&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 16,&#xd;
		&quot;code&quot;: &quot;Translation(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 140&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 8,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 150&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 9,&#xd;
		&quot;code&quot;: &quot;Translation(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 160&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 170&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 7,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 180&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 61,&#xd;
		&quot;code&quot;: &quot;FIB(FL-WT)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 185&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 29,&#xd;
		&quot;code&quot;: &quot;Words Translation(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 190&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;FIB(First Letter)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 200&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 17,&#xd;
		&quot;code&quot;: &quot;Proper Form(Single)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 210&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 18,&#xd;
		&quot;code&quot;: &quot;Proper Form(Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 220&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;Word Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 230&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 10,&#xd;
		&quot;code&quot;: &quot;Translation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 240&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 75,&#xd;
		&quot;code&quot;: &quot;Translation(complete)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 241&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 13,&#xd;
		&quot;code&quot;: &quot;FIB(Tense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 250&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 4,&#xd;
		&quot;code&quot;: &quot;Sentences Rewriting&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 260&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 5,&#xd;
		&quot;code&quot;: &quot;Sentence Completion&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 270&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 14,&#xd;
		&quot;code&quot;: &quot;Scenario Based Conversation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 280&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 32,&#xd;
		&quot;code&quot;: &quot;Dialogue Completion(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 290&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 12,&#xd;
		&quot;code&quot;: &quot;FIB(Preposition)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 300&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 11,&#xd;
		&quot;code&quot;: &quot;FIB(Interrogative)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 310&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 19,&#xd;
		&quot;code&quot;: &quot;Past Tense(Verb)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 320&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 35,&#xd;
		&quot;code&quot;: &quot;FIB(Requirement)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 330&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 15,&#xd;
		&quot;code&quot;: &quot;Error Correction&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 340&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 39,&#xd;
		&quot;code&quot;: &quot;COMP_BOX&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 350&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 40,&#xd;
		&quot;code&quot;: &quot;COMP_READING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 360&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 41,&#xd;
		&quot;code&quot;: &quot;COMP_CLOZE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 370&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 42,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 380&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 43,&#xd;
		&quot;code&quot;: &quot;COMP_FIRSTLETTER&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 390&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 57,&#xd;
		&quot;code&quot;: &quot;COMP_FIB&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 391&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 58,&#xd;
		&quot;code&quot;: &quot;COMP_TASK&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 392&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 62,&#xd;
		&quot;code&quot;: &quot;COMP_T or F&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 393&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 63,&#xd;
		&quot;code&quot;: &quot;COMP_BOX(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 394&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 64,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 395&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 44,&#xd;
		&quot;code&quot;: &quot;ORAL_READWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 400&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 59,&#xd;
		&quot;code&quot;: &quot;ORAL_WORDREADING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 405&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 45,&#xd;
		&quot;code&quot;: &quot;ORAL_GUESSWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 410&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 46,&#xd;
		&quot;code&quot;: &quot;ORAL_READSENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 420&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 47,&#xd;
		&quot;code&quot;: &quot;ORAL_CONVERSATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 429&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 49,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 430&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 50,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 439&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 48,&#xd;
		&quot;code&quot;: &quot;ORAL_TRANSLATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 440&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 51,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 450&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 52,&#xd;
		&quot;code&quot;: &quot;Audio(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 460&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 53,&#xd;
		&quot;code&quot;: &quot;Audio(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 470&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 54,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 480&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 55,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 490&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 56,&#xd;
		&quot;code&quot;: &quot;Audio(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 500&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 66,&#xd;
		&quot;code&quot;: &quot;ORAL_READPARAGRAPH&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1000&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 67,&#xd;
		&quot;code&quot;: &quot;RJ_Fill in Keywords&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1001&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 68,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(C)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1002&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 69,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(E)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1003&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 70,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1004&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 71,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Answer&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1005&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 72,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Choose&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1006&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 73,&#xd;
		&quot;code&quot;: &quot;RJ_Ask questions&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1007&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 74,&#xd;
		&quot;code&quot;: &quot;RJ_Complete the Dialogue&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1008&#xd;
	}],&#xd;
	&quot;suitIds&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/updateShoppingCart?subjectId=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;精选练习套题${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;: 1612429740,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;8&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 4&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;: ${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;:  ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}, {&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;:  ${globalSessionId2},&#xd;
		&quot;className&quot;: &quot;SIT流程&quot;,&#xd;
		&quot;code&quot;: &quot;10000135&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;SchoolPaid&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级SIT流程&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级SIT流程&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 1,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId2},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId2},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;suitRelAssessmentBuilderList&quot;: [{&#xd;
		&quot;suitId&quot;: ${suitId}&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 145574,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342394,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342395,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342396,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId2}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="inactiveSuit-套题失效" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/inactiveSuit?suitId=${suitId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="invalidSuitSeries-套题册失效" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="suitSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${suitSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">suitSeriesId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/sec/invalidSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="布置套题作业-获取教材-获取课本-获取套题册-获取单元-获取套题-更新购物车-获取购物车-获取套题详细内容-布置作业-删除作业" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="setHomeworkSuitSeries-创建套题册" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesName&quot;:&quot;精选练习ABC${num}&quot;,&#xd;
	&quot;homeworkTextbookId&quot;:10,&#xd;
	&quot;description&quot;:&quot;CV&quot;,&#xd;
	&quot;tagLines&quot;:[]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/setHomeworkSuitSeries</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="用户参数" enabled="true">
            <collectionProp name="UserParameters.names">
              <stringProp name="1918375055">suitSeriesName</stringProp>
            </collectionProp>
            <collectionProp name="UserParameters.thread_values">
              <collectionProp name="-1275529123">
                <stringProp name="1041904401">精选练习套题册${num}</stringProp>
              </collectionProp>
            </collectionProp>
            <boolProp name="UserParameters.per_iteration">false</boolProp>
          </UserParameters>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取suitSeriesId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitSeriesId</stringProp>
            <stringProp name="RegexExtractor.regex">(\d+)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="addHomeworkSuitSeriesSessions-套题册关联班级" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitSeriesId&quot;:${suitSeriesId},&#xd;
	&quot;suitSeriesSessionList&quot;:[{&quot;sessionId&quot;:&quot;${globalSessionId1}&quot;}]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/addHomeworkSuitSeriesSessions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="questionPool-关联题库" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/questionPool?subjectId=1&amp;page=1&amp;pageSize=10&amp;title=自动化SIT流程测试专用</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取poolId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">poolId_g1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;poolId&quot;:(.*?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkSuit-套题保存（关联题库和关联套题册）" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;articles&quot;: [],&#xd;
	&quot;homeworkSuit&quot;: {&#xd;
		&quot;suitId&quot;: null,&#xd;
		&quot;suitName&quot;: &quot;精选练习套题${num}&quot;,&#xd;
		&quot;homeworkType&quot;: &quot;SELECTED_PRACTICE_SUIT&quot;,&#xd;
		&quot;suitType&quot;: &quot;VOCABULARY_PRACTICE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;objectVersionNumber&quot;: 1,&#xd;
		&quot;homeworkTextbookSeriesId&quot;: 2,&#xd;
		&quot;homeworkTextbookId&quot;: 10,&#xd;
		&quot;homeworkSuitUnitList&quot;: [{&#xd;
			&quot;homeworkUnitId&quot;: 189&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 190&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 191&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 192&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 193&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 194&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 195&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 196&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 197&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 576&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 199&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 200&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 681&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 635&#xd;
		}, {&#xd;
			&quot;homeworkUnitId&quot;: 654&#xd;
		}],&#xd;
		&quot;homeworkSuitRelSeriesList&quot;: [{&#xd;
			&quot;suitSeriesId&quot;:  ${suitSeriesId}&#xd;
		}],&#xd;
		&quot;tagLines&quot;: [],&#xd;
		&quot;suitDistrictsList&quot;: [{&#xd;
			&quot;provinceId&quot;: &quot;&quot;,&#xd;
			&quot;cityId&quot;: &quot;&quot;&#xd;
		}]&#xd;
	},&#xd;
	&quot;pools&quot;: [{&#xd;
		&quot;poolId&quot;:${poolId_g1},&#xd;
		&quot;questionCount&quot;: 35&#xd;
	}],&#xd;
	&quot;oralParagraphs&quot;: []&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/homeworkSuit</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="TestPlan.comments">精选练习</stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="获取suitId1" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">suitId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.suitId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="combine-套题发布" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;: [${suitId}],&#xd;
	&quot;status&quot;: &quot;RELEASE&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/suit/combine</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbookSeries-获取教材" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbookSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.title==&quot;人教版&quot;)].homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookSeriesId</stringProp>
              </elementProp>
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取homeworkTextbookId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeworkTextbookId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;homeworkTextbookId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSuitSeriesByBookId-获取套题册" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getSuitSeriesByBookId</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getClassifiedSuitList-选择套题册获取套题" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="unitId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">190</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">unitId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="suitSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${suitSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">suitSeriesId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getClassifiedSuitList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">suitId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;suitId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateShoppingCart-更新购物车" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;vocabularyQuestionsList&quot;: [],&#xd;
	&quot;readingList&quot;: [],&#xd;
	&quot;videoQuestions&quot;: [],&#xd;
	&quot;oralReadSentenceList&quot;: [],&#xd;
	&quot;oralGuessWordList&quot;: [],&#xd;
	&quot;oralReadWordList&quot;: [],&#xd;
	&quot;oralTopicDescribeList&quot;: [],&#xd;
	&quot;vocabularyArticleQuestionsList&quot;: [],&#xd;
	&quot;summaryList&quot;: null,&#xd;
	&quot;caculateTime&quot;: {&#xd;
		&quot;vocabulary&quot;: null,&#xd;
		&quot;reading&quot;: null,&#xd;
		&quot;video&quot;: null&#xd;
	},&#xd;
	&quot;vocabularyQuestionsFIDList&quot;: [{&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342394,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;[BLANK] the afternoon, I like to have a cup of tea.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3638,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【in】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3638,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819690,&#xd;
				&quot;optionText&quot;: &quot;In&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;in the afternoon 在下午&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342394&#xd;
	}, {&#xd;
		&quot;duration&quot;: 55,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342395,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;使用最适当的介词完成句子。&quot;,&#xd;
			&quot;questionText&quot;: &quot;I always get up [BLANK] 6: 00 a.m.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 12,&#xd;
			&quot;title&quot;: &quot;介词填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 3712,&#xd;
			&quot;taxonomyTitle&quot;: &quot;时间介词【at】&quot;,&#xd;
			&quot;categoryId&quot;: 3518,&#xd;
			&quot;subCategoryId&quot;: 3532,&#xd;
			&quot;masteryId&quot;: 3533,&#xd;
			&quot;subMasteryId&quot;: 3712,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819691,&#xd;
				&quot;optionText&quot;: &quot;at&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;6: 00 a.m.是具体的时间点，前面的介词应当用at。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000300&quot;,&#xd;
		&quot;questionId&quot;: 342395&#xd;
	}, {&#xd;
		&quot;duration&quot;: 70,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 342396,&#xd;
			&quot;questionTypeId&quot;: 3,&#xd;
			&quot;questionTypeTitle&quot;: &quot;根据要求填空。&quot;,&#xd;
			&quot;questionText&quot;: &quot;head → 头疼：[BLANK]&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 35,&#xd;
			&quot;title&quot;: &quot;按要求填空&quot;,&#xd;
			&quot;taxonomyId&quot;: 6224,&#xd;
			&quot;taxonomyTitle&quot;: &quot;headache&quot;,&#xd;
			&quot;categoryId&quot;: 3172,&#xd;
			&quot;subCategoryId&quot;: 3177,&#xd;
			&quot;masteryId&quot;: 3229,&#xd;
			&quot;subMasteryId&quot;: 6224,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 819692,&#xd;
				&quot;optionText&quot;: &quot;headache&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: &quot;&quot;,&#xd;
			&quot;correctFeedback&quot;: &quot;headache n. 头疼。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: null,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: 1,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: null,&#xd;
			&quot;assign&quot;: true,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: &quot;02003000330&quot;,&#xd;
		&quot;questionId&quot;: 342396&#xd;
	}],&#xd;
	&quot;categoryOrderList&quot;: [{&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Listening&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;VocabGrammar&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 2&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;Reading&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 3&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Oral&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 4&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 24,&#xd;
		&quot;code&quot;: &quot;Video Comprehension&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 10&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 20,&#xd;
		&quot;code&quot;: &quot;Listening(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 20&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 26,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 30&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 28,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 40&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 27,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 50&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 21,&#xd;
		&quot;code&quot;: &quot;Listening(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 60&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 25,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 70&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 22,&#xd;
		&quot;code&quot;: &quot;Listening(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 80&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 23,&#xd;
		&quot;code&quot;: &quot;Listening(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 90&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 65,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 91&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 31,&#xd;
		&quot;code&quot;: &quot;Phonetic Clarification&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 100&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 30,&#xd;
		&quot;code&quot;: &quot;Phonetic Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 110&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 38,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 120&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Multiple Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 130&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 16,&#xd;
		&quot;code&quot;: &quot;Translation(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 140&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 8,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 150&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 9,&#xd;
		&quot;code&quot;: &quot;Translation(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 160&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 170&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 7,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 180&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 61,&#xd;
		&quot;code&quot;: &quot;FIB(FL-WT)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 185&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 29,&#xd;
		&quot;code&quot;: &quot;Words Translation(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 190&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;FIB(First Letter)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 200&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 17,&#xd;
		&quot;code&quot;: &quot;Proper Form(Single)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 210&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 18,&#xd;
		&quot;code&quot;: &quot;Proper Form(Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 220&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;Word Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 230&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 10,&#xd;
		&quot;code&quot;: &quot;Translation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 240&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 75,&#xd;
		&quot;code&quot;: &quot;Translation(complete)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 241&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 13,&#xd;
		&quot;code&quot;: &quot;FIB(Tense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 250&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 4,&#xd;
		&quot;code&quot;: &quot;Sentences Rewriting&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 260&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 5,&#xd;
		&quot;code&quot;: &quot;Sentence Completion&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 270&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 14,&#xd;
		&quot;code&quot;: &quot;Scenario Based Conversation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 280&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 32,&#xd;
		&quot;code&quot;: &quot;Dialogue Completion(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 290&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 12,&#xd;
		&quot;code&quot;: &quot;FIB(Preposition)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 300&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 11,&#xd;
		&quot;code&quot;: &quot;FIB(Interrogative)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 310&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 19,&#xd;
		&quot;code&quot;: &quot;Past Tense(Verb)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 320&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 35,&#xd;
		&quot;code&quot;: &quot;FIB(Requirement)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 330&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 15,&#xd;
		&quot;code&quot;: &quot;Error Correction&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 340&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 39,&#xd;
		&quot;code&quot;: &quot;COMP_BOX&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 350&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 40,&#xd;
		&quot;code&quot;: &quot;COMP_READING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 360&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 41,&#xd;
		&quot;code&quot;: &quot;COMP_CLOZE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 370&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 42,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 380&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 43,&#xd;
		&quot;code&quot;: &quot;COMP_FIRSTLETTER&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 390&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 57,&#xd;
		&quot;code&quot;: &quot;COMP_FIB&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 391&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 58,&#xd;
		&quot;code&quot;: &quot;COMP_TASK&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 392&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 62,&#xd;
		&quot;code&quot;: &quot;COMP_T or F&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 393&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 63,&#xd;
		&quot;code&quot;: &quot;COMP_BOX(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 394&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 64,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 395&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 44,&#xd;
		&quot;code&quot;: &quot;ORAL_READWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 400&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 59,&#xd;
		&quot;code&quot;: &quot;ORAL_WORDREADING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 405&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 45,&#xd;
		&quot;code&quot;: &quot;ORAL_GUESSWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 410&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 46,&#xd;
		&quot;code&quot;: &quot;ORAL_READSENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 420&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 47,&#xd;
		&quot;code&quot;: &quot;ORAL_CONVERSATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 429&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 49,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 430&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 50,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 439&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 48,&#xd;
		&quot;code&quot;: &quot;ORAL_TRANSLATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 440&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 51,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 450&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 52,&#xd;
		&quot;code&quot;: &quot;Audio(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 460&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 53,&#xd;
		&quot;code&quot;: &quot;Audio(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 470&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 54,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 480&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 55,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 490&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 56,&#xd;
		&quot;code&quot;: &quot;Audio(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 500&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 66,&#xd;
		&quot;code&quot;: &quot;ORAL_READPARAGRAPH&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1000&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 67,&#xd;
		&quot;code&quot;: &quot;RJ_Fill in Keywords&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1001&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 68,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(C)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1002&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 69,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(E)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1003&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 70,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1004&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 71,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Answer&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1005&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 72,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Choose&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1006&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 73,&#xd;
		&quot;code&quot;: &quot;RJ_Ask questions&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1007&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 74,&#xd;
		&quot;code&quot;: &quot;RJ_Complete the Dialogue&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1008&#xd;
	}],&#xd;
	&quot;suitIds&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/updateShoppingCart?subjectId=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getShoppingCart-获取购物车" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">api/teacher/v1/sec/getShoppingCart</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getCombineAssignQuestions-获取套题详细内容" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;suitIds&quot;:[&quot;${suitId}&quot;],&#xd;
	&quot;classIds&quot;:[&quot;${globalSessionId1}&quot;]&#xd;
	}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getCombineAssignQuestions</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;精选练习套题${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;: 1612429740,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;8&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 4&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;:${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}, {&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;:${globalSessionId2},&#xd;
		&quot;className&quot;: &quot;SIT流程&quot;,&#xd;
		&quot;code&quot;: &quot;10000135&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;SchoolPaid&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级SIT流程&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级SIT流程&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 1,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId2},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId2},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;suitRelAssessmentBuilderList&quot;: [{&#xd;
		&quot;suitId&quot;:${suitId}&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 145574,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342394,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342395,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentQuestionId&quot;: 342396,&#xd;
		&quot;questionTypeId&quot;: 3,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId2}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="inactiveSuit-套题失效" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value"></stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/homework/v1/sec/inactiveSuit?suitId=${suitId}</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="布置统一作业-获取班级-获取教材-获取课本-获取单元-布置作业-删除作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbookSeries-获取教材" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbookSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.title==&quot;人教版&quot;)].homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookSeriesId</stringProp>
              </elementProp>
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取homeworkTextbookId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeworkTextbookId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;homeworkTextbookId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="updateShoppingCart-更新购物车" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;vocabularyQuestionsList&quot;: [{&#xd;
		&quot;duration&quot;: 60,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;questionTypeTitle&quot;: &quot;读音选词&quot;,&#xd;
		&quot;assessmentQuestions&quot;: [{&#xd;
			&quot;questionId&quot;: 339590,&#xd;
			&quot;questionTypeId&quot;: 1,&#xd;
			&quot;questionTypeTitle&quot;: &quot;读音选词&quot;,&#xd;
			&quot;questionText&quot;: &quot;Miss Smith is ________/gʊd/ with little kids.&quot;,&#xd;
			&quot;homeworkQuestionTypeId&quot;: 38,&#xd;
			&quot;title&quot;: null,&#xd;
			&quot;taxonomyId&quot;: 4104,&#xd;
			&quot;taxonomyTitle&quot;: &quot;good&quot;,&#xd;
			&quot;categoryId&quot;: null,&#xd;
			&quot;subCategoryId&quot;: null,&#xd;
			&quot;masteryId&quot;: null,&#xd;
			&quot;subMasteryId&quot;: null,&#xd;
			&quot;difficultyLevel&quot;: 2,&#xd;
			&quot;questionOptions&quot;: [{&#xd;
				&quot;optionId&quot;: 814145,&#xd;
				&quot;optionText&quot;: &quot;god&quot;,&#xd;
				&quot;isCorrect&quot;: 0,&#xd;
				&quot;sortOrder&quot;: 1,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}, {&#xd;
				&quot;optionId&quot;: 814146,&#xd;
				&quot;optionText&quot;: &quot;grade&quot;,&#xd;
				&quot;isCorrect&quot;: 0,&#xd;
				&quot;sortOrder&quot;: 2,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}, {&#xd;
				&quot;optionId&quot;: 814147,&#xd;
				&quot;optionText&quot;: &quot;gold&quot;,&#xd;
				&quot;isCorrect&quot;: 0,&#xd;
				&quot;sortOrder&quot;: 3,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}, {&#xd;
				&quot;optionId&quot;: 814148,&#xd;
				&quot;optionText&quot;: &quot;good&quot;,&#xd;
				&quot;isCorrect&quot;: 1,&#xd;
				&quot;sortOrder&quot;: 4,&#xd;
				&quot;questionId&quot;: null,&#xd;
				&quot;inputType&quot;: null&#xd;
			}],&#xd;
			&quot;articleId&quot;: null,&#xd;
			&quot;blankId&quot;: null,&#xd;
			&quot;inputTypes&quot;: null,&#xd;
			&quot;correctFeedback&quot;: &quot;god /gɒd/ n. 上帝；grade /greɪd/ n. 年级；gold /gəʊld/ n. 金子；good /gʊd/ adj. 好的。&lt;br&gt;句意：Smith小姐与小孩子相处得很好。&quot;,&#xd;
			&quot;inCorrectFeedback&quot;: &quot;god /gɒd/ n. 上帝；grade /greɪd/ n. 年级；gold /gəʊld/ n. 金子；good /gʊd/ adj. 好的。&lt;br&gt;句意：Smith小姐与小孩子相处得很好。&quot;,&#xd;
			&quot;inCorrectPercent&quot;: null,&#xd;
			&quot;userResponse&quot;: null,&#xd;
			&quot;correctResponse&quot;: null,&#xd;
			&quot;inCorrectCount&quot;: null,&#xd;
			&quot;subjectId&quot;: null,&#xd;
			&quot;tagLines&quot;: [],&#xd;
			&quot;orderCode&quot;: &quot;02001000120&quot;,&#xd;
			&quot;questionAnswerDetails&quot;: null,&#xd;
			&quot;addCart&quot;: false,&#xd;
			&quot;assign&quot;: false,&#xd;
			&quot;correct&quot;: null&#xd;
		}],&#xd;
		&quot;orderCode&quot;: null,&#xd;
		&quot;questionId&quot;: null&#xd;
	}],&#xd;
	&quot;readingList&quot;: [],&#xd;
	&quot;videoQuestions&quot;: [],&#xd;
	&quot;oralReadSentenceList&quot;: [],&#xd;
	&quot;oralGuessWordList&quot;: [],&#xd;
	&quot;oralReadWordList&quot;: [],&#xd;
	&quot;oralTopicDescribeList&quot;: [],&#xd;
	&quot;vocabularyArticleQuestionsList&quot;: [],&#xd;
	&quot;summaryList&quot;: null,&#xd;
	&quot;caculateTime&quot;: {&#xd;
		&quot;vocabulary&quot;: null,&#xd;
		&quot;reading&quot;: null,&#xd;
		&quot;video&quot;: null&#xd;
	},&#xd;
	&quot;vocabularyQuestionsFIDList&quot;: [],&#xd;
	&quot;categoryOrderList&quot;: [{&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Listening&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;VocabGrammar&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 2&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;Reading&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 3&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Oral&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 4&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 24,&#xd;
		&quot;code&quot;: &quot;Video Comprehension&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 10&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 20,&#xd;
		&quot;code&quot;: &quot;Listening(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 20&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 26,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 30&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 28,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 40&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 27,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 50&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 21,&#xd;
		&quot;code&quot;: &quot;Listening(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 60&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 25,&#xd;
		&quot;code&quot;: &quot;Listening(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 70&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 22,&#xd;
		&quot;code&quot;: &quot;Listening(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 80&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 23,&#xd;
		&quot;code&quot;: &quot;Listening(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 90&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 65,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 91&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 31,&#xd;
		&quot;code&quot;: &quot;Phonetic Clarification&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 100&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 30,&#xd;
		&quot;code&quot;: &quot;Phonetic Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 110&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 38,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 120&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 1,&#xd;
		&quot;code&quot;: &quot;Multiple Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 130&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 16,&#xd;
		&quot;code&quot;: &quot;Translation(MCQ)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 140&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 8,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 150&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 9,&#xd;
		&quot;code&quot;: &quot;Translation(Spelling)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 160&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 6,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 170&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 7,&#xd;
		&quot;code&quot;: &quot;Phonetic Transcriptions(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 180&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 61,&#xd;
		&quot;code&quot;: &quot;FIB(FL-WT)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 185&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 29,&#xd;
		&quot;code&quot;: &quot;Words Translation(Sentense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 190&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 3,&#xd;
		&quot;code&quot;: &quot;FIB(First Letter)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 200&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 17,&#xd;
		&quot;code&quot;: &quot;Proper Form(Single)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 210&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 18,&#xd;
		&quot;code&quot;: &quot;Proper Form(Multiple)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 220&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 2,&#xd;
		&quot;code&quot;: &quot;Word Choice&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 230&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 10,&#xd;
		&quot;code&quot;: &quot;Translation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 240&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 75,&#xd;
		&quot;code&quot;: &quot;Translation(complete)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 241&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 13,&#xd;
		&quot;code&quot;: &quot;FIB(Tense)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 250&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 4,&#xd;
		&quot;code&quot;: &quot;Sentences Rewriting&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 260&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 5,&#xd;
		&quot;code&quot;: &quot;Sentence Completion&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 270&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 14,&#xd;
		&quot;code&quot;: &quot;Scenario Based Conversation&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 280&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 32,&#xd;
		&quot;code&quot;: &quot;Dialogue Completion(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 290&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 12,&#xd;
		&quot;code&quot;: &quot;FIB(Preposition)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 300&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 11,&#xd;
		&quot;code&quot;: &quot;FIB(Interrogative)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 310&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 19,&#xd;
		&quot;code&quot;: &quot;Past Tense(Verb)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 320&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 35,&#xd;
		&quot;code&quot;: &quot;FIB(Requirement)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 330&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 15,&#xd;
		&quot;code&quot;: &quot;Error Correction&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 340&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 39,&#xd;
		&quot;code&quot;: &quot;COMP_BOX&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 350&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 40,&#xd;
		&quot;code&quot;: &quot;COMP_READING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 360&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 41,&#xd;
		&quot;code&quot;: &quot;COMP_CLOZE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 370&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 42,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 380&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 43,&#xd;
		&quot;code&quot;: &quot;COMP_FIRSTLETTER&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 390&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 57,&#xd;
		&quot;code&quot;: &quot;COMP_FIB&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 391&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 58,&#xd;
		&quot;code&quot;: &quot;COMP_TASK&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 392&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 62,&#xd;
		&quot;code&quot;: &quot;COMP_T or F&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 393&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 63,&#xd;
		&quot;code&quot;: &quot;COMP_BOX(Proper Form)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 394&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 64,&#xd;
		&quot;code&quot;: &quot;COMP_SENTENCE(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 395&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 44,&#xd;
		&quot;code&quot;: &quot;ORAL_READWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 400&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 59,&#xd;
		&quot;code&quot;: &quot;ORAL_WORDREADING&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 405&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 45,&#xd;
		&quot;code&quot;: &quot;ORAL_GUESSWORD&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 410&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 46,&#xd;
		&quot;code&quot;: &quot;ORAL_READSENTENCE&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 420&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 47,&#xd;
		&quot;code&quot;: &quot;ORAL_CONVERSATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 429&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 49,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Sentence)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 430&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 50,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Synonymy)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 439&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 48,&#xd;
		&quot;code&quot;: &quot;ORAL_TRANSLATION&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 440&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 51,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Word)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 450&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 52,&#xd;
		&quot;code&quot;: &quot;Audio(Picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 460&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 53,&#xd;
		&quot;code&quot;: &quot;Audio(Dialogue)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 470&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 54,&#xd;
		&quot;code&quot;: &quot;Audio(FIB Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 480&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 55,&#xd;
		&quot;code&quot;: &quot;Audio(MCQ Passage)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 490&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 56,&#xd;
		&quot;code&quot;: &quot;Audio(T or F)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 500&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 66,&#xd;
		&quot;code&quot;: &quot;ORAL_READPARAGRAPH&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1000&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 67,&#xd;
		&quot;code&quot;: &quot;RJ_Fill in Keywords&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1001&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 68,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(C)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1002&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 69,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(E)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1003&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 70,&#xd;
		&quot;code&quot;: &quot;RJ_Topic Sketch(picture)&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1004&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 71,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Answer&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1005&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 72,&#xd;
		&quot;code&quot;: &quot;RJ_Listen and Choose&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1006&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 73,&#xd;
		&quot;code&quot;: &quot;RJ_Ask questions&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1007&#xd;
	}, {&#xd;
		&quot;questionCategoryId&quot;: 74,&#xd;
		&quot;code&quot;: &quot;RJ_Complete the Dialogue&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;displayOrder&quot;: 1008&#xd;
	}],&#xd;
	&quot;suitIds&quot;: null&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/updateShoppingCart?subjectId=1</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;统一作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;: 1583920380,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;：${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">assessmentIds</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;assessmentIds&quot;:[(.*?)]</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="布置个性化作业-获取班级-获取教材-获取课本-获取单元-布置作业-删除作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbookSeries-获取教材" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbookSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.title==&quot;人教版&quot;)].homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookSeriesId</stringProp>
              </elementProp>
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取homeworkTextbookId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeworkTextbookId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;homeworkTextbookId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 1,&#xd;
	&quot;title&quot;: &quot;流程SIT${num}12&quot;,&#xd;
	&quot;beginDate&quot;: 1527498240,&#xd;
	&quot;endDate&quot;: 1527782340,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: 41,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 11&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 2&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;:${globalSessionId1},&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;title&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;芝士网学习班&quot;,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <stringProp name="TestPlan.comments">提取assessmentId</stringProp>
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-选择班级-获取作业列表-正向流--Q" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkList-选择班级获取作业列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-选择班级-选择作业-获取班级作业成绩-正向流--Q" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkList-选择班级获取作业列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-从首页获取班级列表-正向流" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="users-从首页获取班级列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user-profile/v1/sec/users?identity=teacher</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-从班级管理获取班级列表-正向流" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String globalSessionId1 = vars.get(&quot;globalSessionId1&quot;);
props.put(&quot;globalSessionId1&quot;, globalSessionId1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/classStudents-从班级管理获取班级列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">5</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="identity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">teacher</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identity</stringProp>
              </elementProp>
              <elementProp name="globalSessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">globalSessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/user-profile/v1/sec/users/classStudents</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-选择班级查看作业列表-正向流" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String globalSessionId1 = vars.get(&quot;globalSessionId1&quot;);
props.put(&quot;globalSessionId1&quot;, globalSessionId1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkList-选择班级获取作业列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="isEnd" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isEnd</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录-选择班级-选择作业-获取班级作业成绩-正向流" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">String assessmentId = props.get(&quot;assessmentId&quot;);
vars.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String globalSessionId1 = vars.get(&quot;globalSessionId1&quot;);
props.put(&quot;globalSessionId1&quot;, globalSessionId1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="homeworkList-选择班级获取作业列表" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="isEnd" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">false</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">isEnd</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-选择作业获取班级作业成绩" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查看班级作业详情异常流：登录-获取班级作业成绩" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">String assessmentId = props.get(&quot;assessmentId&quot;);
vars.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-登录（不选择班级、作业）-获取班级作业成绩" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="885224219">Required Integer parameter &apos;assessmentId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查看班级作业详情异常流：登录（不选择班级）-选择作业-获取班级作业成绩" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <stringProp name="filename"></stringProp>
          <stringProp name="parameters"></stringProp>
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="script">String assessmentId = props.get(&quot;assessmentId&quot;);
vars.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-登录（不选择班级）-选择作业--获取班级作业成绩" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="92225781">Required Integer parameter &apos;sessionId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="获取课本异常流-登录（不选择教材）-获取课本" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-684877785">Required int parameter &apos;homeworkTextbookSeriesId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="获取单元异常流-登录（不选择课本)-获取单元" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-2131632988">Required int parameter &apos;homeworkTextbookId&apos; is not presen</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="获取套题册异常流-登录（不选择课本）-获取套题册" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getSuitSeriesByBookId-获取套题册" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getSuitSeriesByBookId</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1362790465">Required Integer parameter &apos;homeworkTextbookId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="获取套题异常流-登录（不选择套题册）-获取套题列表" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getClassifiedSuitList-获取套题" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="unitId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">190</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">unitId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getClassifiedSuitList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1809010755">Required Integer parameter &apos;suitSeriesId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="布置个性化作业-异常流-重复布置相同作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId2</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">2</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String globalSessionId1 = vars.get(&quot;globalSessionId1&quot;);
props.put(&quot;globalSessionId1&quot;, globalSessionId1);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbookSeries-获取教材" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbookSeries</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.title==&quot;人教版&quot;)].homeworkTextbookSeriesId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkTextbook-获取课本" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookSeriesId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookSeriesId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookSeriesId</stringProp>
              </elementProp>
              <elementProp name="aboutSuit" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">true</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">aboutSuit</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkTextbook</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取homeworkTextbookId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">homeworkTextbookId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;homeworkTextbookId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkUnit-获取单元" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="homeworkTextbookId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${homeworkTextbookId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">homeworkTextbookId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkUnit</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 1,&#xd;
	&quot;title&quot;: &quot;流程SIT${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527498240,&#xd;
	&quot;endDate&quot;: 1527782340,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: 41,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 11&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 2&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: ${globalSessionId1},&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;title&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;芝士网学习班&quot;,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="912299901">assessmentId</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-再次布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 1,&#xd;
	&quot;title&quot;: &quot;流程SIT${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527498240,&#xd;
	&quot;endDate&quot;: 1527782340,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: false,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: 41,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 11&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 2&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;sessionId&quot;: ${globalSessionId1},&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;title&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;classTypeTitle&quot;: &quot;芝士网学习班&quot;,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true,&#xd;
			&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-501933809">作业与已布置作业的冲突。请尝试修改作业名称或答题截止时间</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="删除作业正向流：登录-选择班级删除作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">String assessmentId = props.get(&quot;assessmentId&quot;);
vars.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;统一作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;: 1583920380,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;:${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1783474026">assessmentIds</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-747766406">&quot;status&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="删除作业异常流：登录-选择班级删除作业-再次删除相同作业" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <BeanShellPreProcessor guiclass="TestBeanGUI" testclass="BeanShellPreProcessor" testname="BeanShell PreProcessor" enabled="true">
          <boolProp name="resetInterpreter">false</boolProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="script">String assessmentId = props.get(&quot;assessmentId&quot;);
vars.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
        </BeanShellPreProcessor>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;统一作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;: 1583920380,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;: ${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;:  ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1783474026">assessmentIds</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-747766406">&quot;status&quot;:true</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="deleteHomework-删除作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;assessmentId&quot;:${assessmentId},&#xd;
  &quot;sessionId&quot;:&quot;${globalSessionId1}&quot;,&#xd;
  &quot;subjectId&quot;: 1&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/deleteHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="800062157">作业不存在,或已删除</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查看班作业错题正向流-讲师选择班级获取作业列表-选择作业-获取班级错题" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId1</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;SIT作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;:1867917180,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;: ${globalSessionId1},&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: ${globalSessionId1},&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;:${globalSessionId1},&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-1783474026">assessmentIds</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-查看成绩获取sessionUserTrackingId" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework-学生打开作业" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取AssessmentId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">AssessmentId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;AssessmentId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取QuestionId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">QuestionId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;QuestionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.QuestionTypeId==1)].QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String AssessmentId = vars.get(&quot;AssessmentId&quot;);
props.put(&quot;AssessmentId&quot;, AssessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="users/-获取学生用户信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="identity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">student</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identity</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/user-profile/v1/sec/users</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">userId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework-学生提交作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${AssessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId},&#xd;
	&quot;UserId&quot;: ${userId},&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 1,&#xd;
			&quot;UserTimeSpent&quot;: 7,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;ArticleId&quot;: -1,&#xd;
				&quot;QuestionId&quot;:${QuestionId},&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;InputTypes&quot;: [&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;],&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;SessionId&quot;: ${globalSessionId1},&#xd;
	&quot;requiredEmend&quot;: true,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">8000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="讲师选择班级获取作业列表homeworkList" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="选择作业选择班级获取班级错题getHomeworkScoreNew" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId1}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查看班作业错题异常流-讲师选择班级获取作业列表-不选择作业-获取班级错题" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;SIT作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;:1867917180,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;: 128097,&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: 128097,&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: 128097,&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-查看成绩获取sessionUserTrackingId" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework-学生打开作业" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取AssessmentId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">AssessmentId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;AssessmentId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取QuestionId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">QuestionId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;QuestionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.QuestionTypeId==1)].QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String AssessmentId = vars.get(&quot;AssessmentId&quot;);
props.put(&quot;AssessmentId&quot;, AssessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="users/-获取学生用户信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="identity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">student</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identity</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/user-profile/v1/sec/users</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">userId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework-学生提交作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${AssessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId},&#xd;
	&quot;UserId&quot;: ${userId},&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 1,&#xd;
			&quot;UserTimeSpent&quot;: 7,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;ArticleId&quot;: -1,&#xd;
				&quot;QuestionId&quot;:${QuestionId},&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;InputTypes&quot;: [&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;],&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;SessionId&quot;: ${globalSessionId},&#xd;
	&quot;requiredEmend&quot;: true,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">8000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="讲师选择班级获取作业列表homeworkList" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="不选择作业获取班级错题getHomeworkScoreNew" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="885224219">Required Integer parameter &apos;assessmentId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="查看班作业错题异常流-讲师不选择班级-选择作业-获取班级错题" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1503034514000</longProp>
        <longProp name="ThreadGroup.end_time">1503034514000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getToken" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;username&quot;: &quot;${username}&quot;,&#xd;
	&quot;password&quot;: &quot;${passwd}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/zauth/v1/token/access</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="type" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">type</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;token_type&quot;:&quot;(.*?)&quot;}</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;access_token&quot;:&quot;(.*?)&quot;,</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getTeacherGlobalSessions-获取班级" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getTeacherGlobalSessions</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取globalSessionId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">globalSessionId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;globalSessionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="newPublishAssessment-布置作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;textbookSeriesId&quot;: 2,&#xd;
	&quot;textbookId&quot;: 10,&#xd;
	&quot;assessmentBuilderType&quot;: 2,&#xd;
	&quot;title&quot;: &quot;SIT作业${num}&quot;,&#xd;
	&quot;beginDate&quot;: 1527579840,&#xd;
	&quot;endDate&quot;:1867917180,&#xd;
	&quot;isOptionRandom&quot;: true,&#xd;
	&quot;isQuestionFeedback&quot;: true,&#xd;
	&quot;showSubTitle&quot;: true,&#xd;
	&quot;isTimerOn&quot;: true,&#xd;
	&quot;isPublish&quot;: true,&#xd;
	&quot;duration&quot;: &quot;2&quot;,&#xd;
	&quot;subjectId&quot;: 1,&#xd;
	&quot;assessmentBuilderUnitList&quot;: [{&#xd;
		&quot;unitName&quot;: &quot;Starter Unit 1&quot;,&#xd;
		&quot;unitNo&quot;: 1,&#xd;
		&quot;unitId&quot;: 189&#xd;
	}],&#xd;
	&quot;assessmentBuilderClassificationList&quot;: [{&#xd;
		&quot;assessmentClassification&quot;: 1,&#xd;
		&quot;assessmentQuestionCount&quot;: 1&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 2,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 3,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 4,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 5,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 6,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 7,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 8,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 9,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 10,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}, {&#xd;
		&quot;assessmentClassification&quot;: 11,&#xd;
		&quot;assessmentQuestionCount&quot;: 0&#xd;
	}],&#xd;
	&quot;assessmentBuilderSessionList&quot;: [{&#xd;
		&quot;provinceId&quot;: 2816,&#xd;
		&quot;provinceName&quot;: &quot;陕西省&quot;,&#xd;
		&quot;cityId&quot;: 2817,&#xd;
		&quot;cityName&quot;: &quot;西安市&quot;,&#xd;
		&quot;districtId&quot;: 2823,&#xd;
		&quot;districtName&quot;: &quot;雁塔区&quot;,&#xd;
		&quot;schoolId&quot;: 740,&#xd;
		&quot;schoolName&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;campusId&quot;: 762,&#xd;
		&quot;campusName&quot;: &quot;APP测试一&quot;,&#xd;
		&quot;campusStudyingPhase&quot;: &quot;Junior&quot;,&#xd;
		&quot;grade&quot;: &quot;2016&quot;,&#xd;
		&quot;sessionId&quot;: 128097,&#xd;
		&quot;className&quot;: &quot;测试班&quot;,&#xd;
		&quot;code&quot;: &quot;10000125&quot;,&#xd;
		&quot;isAllow&quot;: 1,&#xd;
		&quot;classType&quot;: &quot;ZhishiNet&quot;,&#xd;
		&quot;subjectId&quot;: 1,&#xd;
		&quot;classDisplayTitle&quot;: &quot;APP测试学校 APP测试一 初中 2016级测试班&quot;,&#xd;
		&quot;globalSessionTitle&quot;: &quot;2016级测试班&quot;,&#xd;
		&quot;appTitle&quot;: &quot;APP测试学校&quot;,&#xd;
		&quot;checkFlag&quot;: false,&#xd;
		&quot;sessItemId&quot;: 0,&#xd;
		&quot;isRequire&quot;: true,&#xd;
		&quot;isRequiredEmend&quot;: true,&#xd;
		&quot;isChecked&quot;: true,&#xd;
		&quot;selectAsk&quot;: [{&#xd;
			&quot;sessionId&quot;: 128097,&#xd;
			&quot;isRequire&quot;: true&#xd;
		}, {&#xd;
			&quot;sessionId&quot;: 128097,&#xd;
			&quot;isRequiredEmend&quot;: true&#xd;
		}],&#xd;
		&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
	}],&#xd;
	&quot;assessmentBuilderQuestionList&quot;: [{&#xd;
		&quot;assessmentQuestionId&quot;: 339590,&#xd;
		&quot;questionTypeId&quot;: 1,&#xd;
		&quot;tabNum&quot;: 1&#xd;
	}]&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/newPublishAssessment</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">assessmentId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.assessmentIds[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String assessmentId = vars.get(&quot;assessmentId&quot;);
props.put(&quot;assessmentId&quot;, assessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getHomeworkScoreNew-查看成绩获取sessionUserTrackingId" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">10000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="launchTheAssessmentHomework-学生打开作业" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
              <elementProp name="sessionid" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionid</stringProp>
              </elementProp>
              <elementProp name="sessionUserTrackingId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${sessionUserTrackingId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionUserTrackingId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">utf-8</stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/launchTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取AssessmentId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">AssessmentId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;AssessmentId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取QuestionId" enabled="false">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">QuestionId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;QuestionId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="JSON Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$..[?(@.QuestionTypeId==1)].QuestionId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="BeanShell PostProcessor" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String AssessmentId = vars.get(&quot;AssessmentId&quot;);
props.put(&quot;AssessmentId&quot;, AssessmentId);</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="users/-获取学生用户信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="identity" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">student</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">identity</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">api/user-profile/v1/sec/users</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="提取userId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">userId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;userId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="saveTheAssessmentHomework-学生提交作业" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;AssessmentType&quot;: 2,&#xd;
	&quot;AssessmentId&quot;: ${AssessmentId},&#xd;
	&quot;SessionUserTrackingId&quot;: ${sessionUserTrackingId},&#xd;
	&quot;UserId&quot;: ${userId},&#xd;
	&quot;LanguageId&quot;: 3,&#xd;
	&quot;IsPreview&quot;: false,&#xd;
	&quot;CategoryIndex&quot;: 0,&#xd;
	&quot;GroupIndex&quot;: 0,&#xd;
	&quot;QuestionIndex&quot;: 0,&#xd;
	&quot;ActiveIndex&quot;: 0,&#xd;
	&quot;IsAssessmentCompleted&quot;: true,&#xd;
	&quot;QuestionCategorys&quot;: [{&#xd;
		&quot;CategoryId&quot;: 2,&#xd;
		&quot;CategoryTitle&quot;: &quot;词汇语法&quot;,&#xd;
		&quot;QuestionGroups&quot;: [{&#xd;
			&quot;GroupType&quot;: 1,&#xd;
			&quot;UserTimeSpent&quot;: 7,&#xd;
			&quot;Questions&quot;: [{&#xd;
				&quot;isChange&quot;: true,&#xd;
				&quot;ArticleId&quot;: -1,&#xd;
				&quot;QuestionId&quot;:${QuestionId},&#xd;
				&quot;IsQuestionCorrect&quot;: 0,&#xd;
				&quot;UserResponse&quot;: [],&#xd;
				&quot;questionNumber&quot;: 1,&#xd;
				&quot;InputTypes&quot;: [&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;],&#xd;
				&quot;BlankAnswers&quot;: [&quot;&quot;],&#xd;
				&quot;traceBlankAnswers&quot;: [&quot;&quot;]&#xd;
			}],&#xd;
			&quot;FeedbackViewed&quot;: false&#xd;
		}]&#xd;
	}],&#xd;
	&quot;SessionId&quot;: ${globalSessionId},&#xd;
	&quot;requiredEmend&quot;: true,&#xd;
	&quot;emendTypeCode&quot;: &quot;ERROR_INTENSIFY_QUESTIONS&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/app-student/v2/sec/saveTheAssessmentHomework</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="固定定时器" enabled="true">
            <stringProp name="ConstantTimer.delay">8000</stringProp>
          </ConstantTimer>
          <hashTree/>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="获取sessionUserTrackingId" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">sessionUserTrackingId</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;sessionUserTrackingId&quot;:(.+?),</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">0</stringProp>
          </RegexExtractor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="讲师选择班级获取作业列表homeworkList" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="subjectId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">subjectId</stringProp>
              </elementProp>
              <elementProp name="sessionId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${globalSessionId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">sessionId</stringProp>
              </elementProp>
              <elementProp name="page" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">1</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">page</stringProp>
              </elementProp>
              <elementProp name="pageSize" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">10</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">pageSize</stringProp>
              </elementProp>
              <elementProp name="platform" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">app</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">platform</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/teacher/homeworkList</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">200</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">8</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="不选择班级、选择作业-获取班级错题getHomeworkScoreNew" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="assessmentId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${assessmentId}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">assessmentId</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${host}</stringProp>
          <stringProp name="HTTPSampler.port">${port}</stringProp>
          <stringProp name="HTTPSampler.protocol">${protocol}</stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/teacher/v1/sec/getHomeworkScoreNew</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="2099646995">&quot;Required Integer parameter &apos;sessionId&apos; is not present</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">true</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="工作台" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
